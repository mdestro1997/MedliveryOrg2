{"ast":null,"code":"import _classCallCheck from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{reduxForm,Field}from'redux-form';import{Link}from'react-router-dom';import{Container,Button,Form,Col,Alert}from'react-bootstrap';import FieldInputUpload from'./uploaderMed';import validator from'validator';import bsCustomFileInput from'bs-custom-file-input';var ApplyForm=/*#__PURE__*/function(_Component){_inherits(ApplyForm,_Component);var _super=_createSuper(ApplyForm);function ApplyForm(){var _this;_classCallCheck(this,ApplyForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderTextArea=function(_ref){var input=_ref.input,type=_ref.type,label=_ref.label,controlId=_ref.controlId,placeholder=_ref.placeholder,required=_ref.required,rows=_ref.rows,cols=_ref.cols,accept=_ref.accept,meta=_ref.meta;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Form.Group,{as:Col,controlId:controlId},/*#__PURE__*/React.createElement(Form.Label,null,label),/*#__PURE__*/React.createElement(Form.Control,Object.assign({},input,{as:type,rows:rows,cols:cols,placeholder:placeholder,disabled:_this.props.disabled,accept:accept,required:true})),_this.renderError(meta)));};_this.renderHelper=function(_ref2){var input=_ref2.input,type=_ref2.type,label=_ref2.label,controlId=_ref2.controlId,placeholder=_ref2.placeholder,required=_ref2.required,accept=_ref2.accept,meta=_ref2.meta,error=_ref2.error,className=_ref2.className,maxDate=_ref2.maxDate;console.log('meta ',meta);return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Form.Group,{controlId:controlId},/*#__PURE__*/React.createElement(Form.Label,null,label),/*#__PURE__*/React.createElement(Form.Control,Object.assign({required:true},input,{type:type,placeholder:placeholder//  max={maxDate}\n})),_this.renderError(meta)));};_this.onSubmit=function(formValues){// formValues.token = localStorage.getItem('token');\n//     console.log(formValues);\n//     console.log('localStorage ', localStorage.getItem('token'))\n_this.props.onSubmit(formValues);};return _this;}_createClass(ApplyForm,[{key:\"componentDidMount\",value:function componentDidMount(){bsCustomFileInput.init();}},{key:\"renderError\",value:function renderError(_ref3){var error=_ref3.error,touched=_ref3.touched;if(error&&touched){return/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(Alert,{variant:\"danger\"},error));}}},{key:\"render\",value:function render(){var handleSubmit=this.props.handleSubmit;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Form,{onSubmit:handleSubmit(this.onSubmit.bind(this)),encType:\"multipart/form-data\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"Address\",type:\"text\",component:this.renderHelper,label:\"Google Maps Location\",placeholder:\"Click To Select Location\",className:\"col-md-6\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"nearestMedicalFacility\",type:\"text\",component:this.renderHelper,label:\"Nearest Clinic/Hospital\",placeholder:\"Nearest Clinic/Hospital\",className:\"col-md-6\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"briefMedicalHistory\",type:\"textarea\",placeholder:\"Tell us more about your Past and Present Medical History\",label:\"Brief Medical History\",rows:\"8\",cols:\"70\",component:this.renderTextArea})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"copyOfMedicalHistory\",component:FieldInputUpload}),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{className:\"mr-3\",type:\"submit\",disabled:this.props.disabled,variant:this.props.variant},' ',this.props.message),/*#__PURE__*/React.createElement(Button,{as:Link,to:this.props.to,type:\"submit\",variant:this.props.variant1},' ',this.props.message1)),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null))));}}]);return ApplyForm;}(Component);function validate(values){var error={};if(!values.nearestMedicalFacility){error.nearestMedicalFacility='Field is Required';}else if(values.nearestMedicalFacility){// if(!validator.isAlpha(values.nearestMedicalFacility)){\n//     error.nearestMedicalFacility=\"Name Cannot Contain numbers,symbols or special Characters\"\n// }\n}if(!values.briefMedicalHistory){error.briefMedicalHistory='Field is Required';}if(!values.copyOfMedicalHistory){error.copyOfMedicalHistory='Field is Required';}if(!values.Address){error.Address='Field is Required';}return error;}export default reduxForm({form:'applyForm',validate:validate})(ApplyForm);","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/applyForm.js"],"names":["React","Component","reduxForm","Field","Link","Container","Button","Form","Col","Alert","FieldInputUpload","validator","bsCustomFileInput","ApplyForm","renderTextArea","input","type","label","controlId","placeholder","required","rows","cols","accept","meta","props","disabled","renderError","renderHelper","error","className","maxDate","console","log","onSubmit","formValues","init","touched","handleSubmit","bind","variant","message","to","variant1","message1","validate","values","nearestMedicalFacility","briefMedicalHistory","copyOfMedicalHistory","Address","form"],"mappings":"4sBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,CAAoBC,KAApB,KAAiC,YAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,SAAT,CAAoBC,MAApB,CAA4BC,IAA5B,CAAkCC,GAAlC,CAAuCC,KAAvC,KAAoD,iBAApD,CACA,MAAOC,CAAAA,gBAAP,KAA6B,eAA7B,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,sBAA9B,C,GAEMC,CAAAA,S,uUAKJC,c,CAAiB,cAWX,IAVJC,CAAAA,KAUI,MAVJA,KAUI,CATJC,IASI,MATJA,IASI,CARJC,KAQI,MARJA,KAQI,CAPJC,SAOI,MAPJA,SAOI,CANJC,WAMI,MANJA,WAMI,CALJC,QAKI,MALJA,QAKI,CAJJC,IAII,MAJJA,IAII,CAHJC,IAGI,MAHJA,IAGI,CAFJC,MAEI,MAFJA,MAEI,CADJC,IACI,MADJA,IACI,CACJ,mBACE,4CAEM,oBAAC,IAAD,CAAM,KAAN,EAAa,EAAE,CAAEhB,GAAjB,CAAsB,SAAS,CAAEU,SAAjC,eACE,oBAAC,IAAD,CAAM,KAAN,MAAaD,KAAb,CADF,cAEE,oBAAC,IAAD,CAAM,OAAN,kBACMF,KADN,EAEE,EAAE,CAAEC,IAFN,CAGE,IAAI,CAAEK,IAHR,CAIE,IAAI,CAAEC,IAJR,CAKE,WAAW,CAAEH,WALf,CAME,QAAQ,CAAE,MAAKM,KAAL,CAAWC,QANvB,CAOE,MAAM,CAAEH,MAPV,CAQE,QAAQ,KARV,GAFF,CAaG,MAAKI,WAAL,CAAiBH,IAAjB,CAbH,CAFN,CADF,CAqBD,C,OAYDI,Y,CAAe,eAYT,IAXJb,CAAAA,KAWI,OAXJA,KAWI,CAVJC,IAUI,OAVJA,IAUI,CATJC,KASI,OATJA,KASI,CARJC,SAQI,OARJA,SAQI,CAPJC,WAOI,OAPJA,WAOI,CANJC,QAMI,OANJA,QAMI,CALJG,MAKI,OALJA,MAKI,CAJJC,IAII,OAJJA,IAII,CAHJK,KAGI,OAHJA,KAGI,CAFJC,SAEI,OAFJA,SAEI,CADJC,OACI,OADJA,OACI,CACJC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBT,IAArB,EAEA,mBACE,2BAAK,SAAS,CAAEM,SAAhB,eACE,oBAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAEZ,SAAvB,eACE,oBAAC,IAAD,CAAM,KAAN,MAAaD,KAAb,CADF,cAEE,oBAAC,IAAD,CAAM,OAAN,gBACE,QAAQ,KADV,EAEMF,KAFN,EAGE,IAAI,CAAEC,IAHR,CAIE,WAAW,CAAEG,WACb;AALF,GAFF,CAUG,MAAKQ,WAAL,CAAiBH,IAAjB,CAVH,CADF,CADF,CAgBD,C,OAEDU,Q,CAAW,SAACC,UAAD,CAAgB,CACzB;AACA;AACA;AAEA,MAAKV,KAAL,CAAWS,QAAX,CAAoBC,UAApB,EACD,C,kGAxFmB,CAClBvB,iBAAiB,CAACwB,IAAlB,GACD,C,sDAqC+B,IAAlBP,CAAAA,KAAkB,OAAlBA,KAAkB,CAAXQ,OAAW,OAAXA,OAAW,CAC9B,GAAIR,KAAK,EAAIQ,OAAb,CAAsB,CACpB,mBACE,2BAAK,SAAS,CAAC,EAAf,eACE,oBAAC,KAAD,EAAO,OAAO,CAAC,QAAf,EAAyBR,KAAzB,CADF,CADF,CAKD,CACF,C,uCA2CQ,IACCS,CAAAA,YADD,CACkB,KAAKb,KADvB,CACCa,YADD,CAEP,mBACE,4CACE,oBAAC,SAAD,mBACE,oBAAC,IAAD,EACE,QAAQ,CAAEA,YAAY,CAAC,KAAKJ,QAAL,CAAcK,IAAd,CAAmB,IAAnB,CAAD,CADxB,CAEE,OAAO,CAAC,qBAFV,eAIE,8BAJF,cAKE,oBAAC,IAAD,CAAM,GAAN,mBACE,oBAAC,KAAD,EACE,IAAI,CAAC,SADP,CAEE,IAAI,CAAC,MAFP,CAGE,SAAS,CAAE,KAAKX,YAHlB,CAIE,KAAK,CAAC,sBAJR,CAKE,WAAW,CAAC,0BALd,CAME,SAAS,CAAC,UANZ,EADF,CALF,cAgBA,oBAAC,IAAD,CAAM,GAAN,mBACA,oBAAC,KAAD,EACM,IAAI,CAAC,wBADX,CAEM,IAAI,CAAC,MAFX,CAGM,SAAS,CAAE,KAAKA,YAHtB,CAIM,KAAK,CAAC,yBAJZ,CAKM,WAAW,CAAC,yBALlB,CAMM,SAAS,CAAC,UANhB,EADA,CAhBA,cA0BE,oBAAC,IAAD,CAAM,GAAN,mBACE,oBAAC,KAAD,EACE,IAAI,CAAC,qBADP,CAEE,IAAI,CAAC,UAFP,CAGE,WAAW,CAAC,0DAHd,CAIE,KAAK,CAAC,uBAJR,CAKE,IAAI,CAAC,GALP,CAME,IAAI,CAAC,IANP,CAOE,SAAS,CAAE,KAAKd,cAPlB,EADF,CA1BF,cAsCE,8BAtCF,cAuCE,oBAAC,IAAD,CAAM,GAAN,mBACA,oBAAC,KAAD,EAAO,IAAI,CAAC,sBAAZ,CAAmC,SAAS,CAAEJ,gBAA9C,EADA,cAEE,8BAFF,CAvCF,cA2CE,4CACE,oBAAC,MAAD,EACE,SAAS,CAAC,MADZ,CAEE,IAAI,CAAC,QAFP,CAGE,QAAQ,CAAE,KAAKe,KAAL,CAAWC,QAHvB,CAIE,OAAO,CAAE,KAAKD,KAAL,CAAWe,OAJtB,EAMG,GANH,CAOG,KAAKf,KAAL,CAAWgB,OAPd,CADF,cAUE,oBAAC,MAAD,EACE,EAAE,CAAErC,IADN,CAEE,EAAE,CAAE,KAAKqB,KAAL,CAAWiB,EAFjB,CAGE,IAAI,CAAC,QAHP,CAIE,OAAO,CAAE,KAAKjB,KAAL,CAAWkB,QAJtB,EAMG,GANH,CAOG,KAAKlB,KAAL,CAAWmB,QAPd,CAVF,CA3CF,cAgEE,8BAhEF,cAiEE,8BAjEF,CADF,CADF,CADF,CAyED,C,uBAtKqB3C,S,EAyKxB,QAAS4C,CAAAA,QAAT,CAAkBC,MAAlB,CAA0B,CACxB,GAAMjB,CAAAA,KAAK,CAAG,EAAd,CAEA,GAAI,CAACiB,MAAM,CAACC,sBAAZ,CAAoC,CAClClB,KAAK,CAACkB,sBAAN,CAA+B,mBAA/B,CACD,CAFD,IAEO,IAAID,MAAM,CAACC,sBAAX,CAAmC,CACxC;AACA;AACA;AACD,CACD,GAAI,CAACD,MAAM,CAACE,mBAAZ,CAAiC,CAC/BnB,KAAK,CAACmB,mBAAN,CAA4B,mBAA5B,CACD,CACD,GAAI,CAACF,MAAM,CAACG,oBAAZ,CAAkC,CAChCpB,KAAK,CAACoB,oBAAN,CAA6B,mBAA7B,CACD,CACD,GAAI,CAACH,MAAM,CAACI,OAAZ,CAAqB,CACnBrB,KAAK,CAACqB,OAAN,CAAgB,mBAAhB,CACD,CAED,MAAOrB,CAAAA,KAAP,CACD,CAED,cAAe3B,CAAAA,SAAS,CAAC,CACvBiD,IAAI,CAAE,WADiB,CAEvBN,QAAQ,CAARA,QAFuB,CAAD,CAAT,CAGZhC,SAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport FieldInputUpload from './uploaderMed';\r\nimport validator from 'validator';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\nclass ApplyForm extends Component {\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n  }\r\n\r\n  renderTextArea = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    placeholder,\r\n    required,\r\n    rows,\r\n    cols,\r\n    accept,\r\n    meta,\r\n  }) => {\r\n    return (\r\n      <div>\r\n        \r\n            <Form.Group  as={Col} controlId={controlId}>\r\n              <Form.Label>{label}</Form.Label>\r\n              <Form.Control\r\n                {...input}\r\n                as={type}\r\n                rows={rows}\r\n                cols={cols}\r\n                placeholder={placeholder}\r\n                disabled={this.props.disabled}\r\n                accept={accept}\r\n                required\r\n              />\r\n\r\n              {this.renderError(meta)}\r\n            </Form.Group>\r\n          \r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderError({ error, touched }) {\r\n    if (error && touched) {\r\n      return (\r\n        <div className=''>\r\n          <Alert variant='danger'>{error}</Alert>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    className,\r\n    maxDate,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            //  max={maxDate}\r\n          />\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    // formValues.token = localStorage.getItem('token');\r\n    //     console.log(formValues);\r\n    //     console.log('localStorage ', localStorage.getItem('token'))\r\n\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Form\r\n            onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n            encType='multipart/form-data'\r\n          >\r\n            <br />\r\n            <Form.Row>\r\n              <Field\r\n                name='Address'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Google Maps Location'\r\n                placeholder='Click To Select Location'\r\n                className='col-md-6'\r\n              />\r\n              \r\n            </Form.Row>\r\n          <Form.Row>\r\n          <Field\r\n                name='nearestMedicalFacility'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Nearest Clinic/Hospital'\r\n                placeholder='Nearest Clinic/Hospital'\r\n                className='col-md-6'\r\n              />\r\n          </Form.Row>\r\n            <Form.Row>\r\n              <Field\r\n                name='briefMedicalHistory'\r\n                type='textarea'\r\n                placeholder='Tell us more about your Past and Present Medical History'\r\n                label='Brief Medical History'\r\n                rows='8'\r\n                cols='70'\r\n                component={this.renderTextArea}\r\n               \r\n              />\r\n            </Form.Row>\r\n            <br />\r\n            <Form.Row>\r\n            <Field name='copyOfMedicalHistory' component={FieldInputUpload} />\r\n              <br />\r\n            </Form.Row>\r\n            <div>\r\n              <Button\r\n                className='mr-3'\r\n                type='submit'\r\n                disabled={this.props.disabled}\r\n                variant={this.props.variant}\r\n              >\r\n                {' '}\r\n                {this.props.message}\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={this.props.to}\r\n                type='submit'\r\n                variant={this.props.variant1}\r\n              >\r\n                {' '}\r\n                {this.props.message1}\r\n              </Button>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const error = {};\r\n\r\n  if (!values.nearestMedicalFacility) {\r\n    error.nearestMedicalFacility = 'Field is Required';\r\n  } else if (values.nearestMedicalFacility) {\r\n    // if(!validator.isAlpha(values.nearestMedicalFacility)){\r\n    //     error.nearestMedicalFacility=\"Name Cannot Contain numbers,symbols or special Characters\"\r\n    // }\r\n  }\r\n  if (!values.briefMedicalHistory) {\r\n    error.briefMedicalHistory = 'Field is Required';\r\n  }\r\n  if (!values.copyOfMedicalHistory) {\r\n    error.copyOfMedicalHistory = 'Field is Required';\r\n  }\r\n  if (!values.Address) {\r\n    error.Address = 'Field is Required';\r\n  }\r\n\r\n  return error;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'applyForm',\r\n  validate,\r\n})(ApplyForm);\r\n"]},"metadata":{},"sourceType":"module"}