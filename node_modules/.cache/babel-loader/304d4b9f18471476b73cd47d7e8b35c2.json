{"ast":null,"code":"import axios from 'axios';\nimport { GetApplications, FailedGetApplications } from './typeAuth';\n\nfunction callingBacking(token) {\n  console.log('isfiltered is true');\n  let filterArray = [];\n  let filterValues;\n\n  for (const [key, value] of Object.entries(token)) {\n    if (key !== 'token') {\n      filterValues = key + '=' + value;\n      filterArray.push(filterValues);\n    }\n  }\n\n  console.log('filterArray', filterArray);\n  return filterArray.join('&').toString();\n}\n\nexport async function getApplicationsActionCreator(token) {\n  //     console.log('tokkkkkkkkeeeeen ',token.title);\n  //     console.log('tokkkkkkkkeeeeen ',token.value);\n  //     console.log('tokkkkkkkkeeeeen ',token.token);\n  axios.defaults.headers = {\n    Authorization: `Bearer ${token.token}`\n  };\n\n  try {\n    let builtString = callingBacking(token);\n    console.log('the string', builtString);\n    const request = await axios.get(`https://glacial-wave-31511.herokuapp.com/getUserApplications?${builtString}`); //     console.log('requesttt ',request.data);\n\n    return {\n      type: GetApplications,\n      payload: request.data\n    };\n  } catch (e) {\n    console.log('ERROR....!!!', e);\n    return {\n      type: FailedGetApplications,\n      payload: 'No Applications!!'\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/getApplicationsActionCreator.js"],"names":["axios","GetApplications","FailedGetApplications","callingBacking","token","console","log","filterArray","filterValues","key","value","Object","entries","push","join","toString","getApplicationsActionCreator","defaults","headers","Authorization","builtString","request","get","type","payload","data","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,qBAA1B,QAAuD,YAAvD;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIC,YAAJ;;AACA,OAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BC,MAAM,CAACC,OAAP,CAAeR,KAAf,CAA3B,EAAkD;AAChD,QAAIK,GAAG,KAAK,OAAZ,EAAqB;AACnBD,MAAAA,YAAY,GAAGC,GAAG,GAAG,GAAN,GAAYC,KAA3B;AACAH,MAAAA,WAAW,CAACM,IAAZ,CAAiBL,YAAjB;AACD;AACF;;AACDH,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,WAA3B;AACA,SAAOA,WAAW,CAACO,IAAZ,CAAiB,GAAjB,EAAsBC,QAAtB,EAAP;AACD;;AAED,OAAO,eAAeC,4BAAf,CAA4CZ,KAA5C,EAAmD;AACxD;AACA;AACA;AAEAJ,EAAAA,KAAK,CAACiB,QAAN,CAAeC,OAAf,GAAyB;AACvBC,IAAAA,aAAa,EAAG,UAASf,KAAK,CAACA,KAAM;AADd,GAAzB;;AAIA,MAAI;AACF,QAAIgB,WAAW,GAAGjB,cAAc,CAACC,KAAD,CAAhC;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0Bc,WAA1B;AAEA,UAAMC,OAAO,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CACnB,gEAA+DF,WAAY,EADxD,CAAtB,CALE,CAQF;;AAEA,WAAO;AACLG,MAAAA,IAAI,EAAEtB,eADD;AAELuB,MAAAA,OAAO,EAAEH,OAAO,CAACI;AAFZ,KAAP;AAID,GAdD,CAcE,OAAOC,CAAP,EAAU;AACVrB,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BoB,CAA5B;AAEA,WAAO;AACLH,MAAAA,IAAI,EAAErB,qBADD;AAELsB,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF","sourcesContent":["import axios from 'axios';\r\nimport { GetApplications, FailedGetApplications } from './typeAuth';\r\n\r\nfunction callingBacking(token) {\r\n  console.log('isfiltered is true');\r\n  let filterArray = [];\r\n  let filterValues;\r\n  for (const [key, value] of Object.entries(token)) {\r\n    if (key !== 'token') {\r\n      filterValues = key + '=' + value;\r\n      filterArray.push(filterValues);\r\n    }\r\n  }\r\n  console.log('filterArray', filterArray);\r\n  return filterArray.join('&').toString();\r\n}\r\n\r\nexport async function getApplicationsActionCreator(token) {\r\n  //     console.log('tokkkkkkkkeeeeen ',token.title);\r\n  //     console.log('tokkkkkkkkeeeeen ',token.value);\r\n  //     console.log('tokkkkkkkkeeeeen ',token.token);\r\n\r\n  axios.defaults.headers = {\r\n    Authorization: `Bearer ${token.token}`,\r\n  };\r\n\r\n  try {\r\n    let builtString = callingBacking(token);\r\n\r\n    console.log('the string', builtString);\r\n\r\n    const request = await axios.get(\r\n      `https://glacial-wave-31511.herokuapp.com/getUserApplications?${builtString}`\r\n    );\r\n    //     console.log('requesttt ',request.data);\r\n\r\n    return {\r\n      type: GetApplications,\r\n      payload: request.data,\r\n    };\r\n  } catch (e) {\r\n    console.log('ERROR....!!!', e);\r\n\r\n    return {\r\n      type: FailedGetApplications,\r\n      payload: 'No Applications!!',\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}