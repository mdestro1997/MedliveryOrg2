{"ast":null,"code":"import _classCallCheck from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Form from'react-bootstrap/Form';import{connect}from'react-redux';import{Field,reduxForm}from'redux-form';import{Button,Col,Container,Alert}from'react-bootstrap/';import FieldFileInput from'./uploader';import bsCustomFileInput from'bs-custom-file-input';import validator from'validator';import{signUpActionCreator}from'../actions/signUpActionCreator';import _ from'lodash';// import '../styles/form-styles';\nvar max='';var SignUpForm=/*#__PURE__*/function(_Component){_inherits(SignUpForm,_Component);var _super=_createSuper(SignUpForm);// placeholder=\"Copy Of ID\"\nfunction SignUpForm(props){var _this;_classCallCheck(this,SignUpForm);_this=_super.call(this,props);_this.parent_container={display:'flex',flexFlow:'column',alignItems:'center',justifyContent:'center'};_this.renderHelper=function(_ref){var input=_ref.input,type=_ref.type,label=_ref.label,controlId=_ref.controlId,className=_ref.className,placeholder=_ref.placeholder,required=_ref.required,accept=_ref.accept,meta=_ref.meta,error=_ref.error,max=_ref.max,min=_ref.min;console.log('meta ',meta);return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Form.Group,{controlId:controlId},/*#__PURE__*/React.createElement(Form.Label,null,label),/*#__PURE__*/React.createElement(Form.Control,Object.assign({required:true},input,{type:type,placeholder:placeholder,max:max,min:min})),_this.renderError(meta)));};_this.onChanger=_this.onChanger.bind(_assertThisInitialized(_this));return _this;}_createClass(SignUpForm,[{key:\"componentDidMount\",value:function componentDidMount(){bsCustomFileInput.init();max=this.renderDateHelper();}},{key:\"onChanger\",value:function onChanger(e){var onChange=this.props.input.onChange;onChange(e.target.files[0]);console.log(e.target.files[0]);}},{key:\"renderDateHelper\",value:function renderDateHelper(){var date=new Date();var day=date.getDate();var month=date.getMonth()+1;var year=date.getFullYear();var fullDate=year+'-'+month+'-'+day;var stringDate=_.toString(fullDate);console.log('fullDate ',fullDate);console.log('StringDate ',stringDate);return stringDate;}},{key:\"renderError\",value:function renderError(_ref2){var error=_ref2.error,touched=_ref2.touched;if(error&&touched){return/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(Alert,{variant:\"danger\"},error));}}},{key:\"onSubmit\",// renderHelp({input,type,label,controlId,accept,required,placeholder}){\n//     return (\n//       <div className=\"container\">\n//         <div className=\"custom-file\">\n//           <input {...input} id=\"inputGroupFile01\" onChange={this.onChanger()} accept={accept}placeholder ={placeholder} required={required} type={type} className=\"custom-file-input\" />\n//     <label className=\"custom-file-label\" for=\"inputGroupFile01\">{label}</label>\n//         </div>\n//       </div>\n//     );\n// }\nvalue:function onSubmit(formValues){var _this2=this;console.log(formValues);this.props.signUpActionCreator(formValues,function(){_this2.props.history.push('/selectGroup');});}},{key:\"render\",value:function render(){// const maxDate = new Date();\nvar handleSubmit=this.props.handleSubmit;return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"  \"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"div\",{className:\"home-inner-signUp\"},/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"container   mt-5 col-md-9 bg-secondary text-dark \"},/*#__PURE__*/React.createElement(\"div\",{className:\"\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"container text-center display-4 col-md-8 text-dark\"},\"Sign Up\")),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Form,{encType:\"multipart/form-data\",onSubmit:handleSubmit(this.onSubmit.bind(this))},/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"firstname\",label:\"Firstname\",component:this.renderHelper,type:\"text\",required:\"required\",placeholder:\"Enter Firstname\",controlId:\"formGroupFirstname\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"middlename\",type:\"text\",required:\"required\",label:\"Middlename\",component:this.renderHelper,placeholder:\"Enter Middlename\",controlId:\"formGroupMiddlename\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"lastname\",type:\"text\",required:\"required\",label:\"Lastname\",component:this.renderHelper,placeholder:\"Enter Lastname\",controlId:\"formGroupLastname\",className:\"col-md-4\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"email\",component:this.renderHelper,type:\"email\",required:\"required\",label:\"Email\",placeholder:\"Enter Email\",controlId:\"formGroupEmail\",className:\"col-md-6\"}),/*#__PURE__*/React.createElement(Field,{name:\"dateOfBirth\",type:\"date\",required:\"required\",label:\"Date Of Birth\",min:\"1910-01-30\",max:max,component:this.renderHelper,placeholder:\"Enter DOB\",controlId:\"formGroupDOB\",className:\"col-md-6\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"physicalAddress\",type:\"text\",required:\"required\",label:\"Physical Address\",component:this.renderHelper,placeholder:\"Enter Physical Address\",controlId:\"formGroupPhysicalAddress\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"city\",type:\"text\",required:\"required\",label:\"City\",component:this.renderHelper,placeholder:\"City\",controlId:\"formGroupCountry\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"phoneNumber\",type:\"text\",required:\"required\",label:\"Mobile Number\",component:this.renderHelper,placeholder:\"Enter Mobile Number\",controlId:\"formGroupMobileNumber\",className:\"col-md-4\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"password\",type:\"password\",required:\"required\",label:\"Password\",component:this.renderHelper,placeholder:\"Enter Password\",controlId:\"formGroupPassword\",className:\"col-md-6\"}),/*#__PURE__*/React.createElement(Field,{name:\"passwordConfirm\",type:\"password\",required:\"required\",label:\"Confirm password\",component:this.renderHelper,placeholder:\"Confirm password\",controlId:\"formGrouppasswordConfirm\",className:\"col-md-6\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"copyOfId\",component:FieldFileInput})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"div\",{class:\"row\"},/*#__PURE__*/React.createElement(Button,{className:\"container  col-md-2 \",type:\"submit\",variant:\"success\"},\"Sign Up\")),/*#__PURE__*/React.createElement(\"br\",null)))),/*#__PURE__*/React.createElement(\"br\",null)))));}}]);return SignUpForm;}(Component);function validate(values){var error={};if(!values.firstname){error.firstname='Field is Required';}else if(values.firstname){if(!validator.isAlpha(values.firstname)){error.firstname='Name Cannot Contain numbers,symbols or special Characters';}}if(!values.middlename){error.middlename='Field is Required';}else if(values.middlename){if(!validator.isAlpha(values.middlename)){error.middlename='Name Cannot Contain numbers,symbols or special Characters';}}if(!values.lastname){error.lastname='Field is Required';}else if(values.lastname){if(!validator.isAlpha(values.lastname)){error.lastname='Name Cannot Contain numbers,symbols or special Characters';}}if(!values.password){error.password='Field is Required';}else if(values.password){}if(!values.passwordConfirm){error.passwordConfirm='Field is Required';}else if(values.passwordConfirm){if(!validator.equals(values.passwordConfirm,values.password)){error.passwordConfirm='Passwords do not Match';}}if(!values.phoneNumber){error.phoneNumber='Field is Required';}if(!values.dateOfBirth){error.dateOfBirth='Field is Required';}if(!values.copyOfId){error.copyOfId='Field is Required';}if(!values.physicalAddress){error.physicalAdress='Field is Required';}if(!values.email){error.email='Field is Required';}else if(values.email){var validEmail=validator.isEmail(values.email);if(!validEmail){error.email='Invalid Email';}}//console.log('Error ', errors)\nreturn error;}export default reduxForm({form:'signUpForm',validate:validate})(connect(null,{signUpActionCreator:signUpActionCreator})(SignUpForm));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/signUpForm.js"],"names":["React","Component","Form","connect","Field","reduxForm","Button","Col","Container","Alert","FieldFileInput","bsCustomFileInput","validator","signUpActionCreator","_","max","SignUpForm","props","parent_container","display","flexFlow","alignItems","justifyContent","renderHelper","input","type","label","controlId","className","placeholder","required","accept","meta","error","min","console","log","renderError","onChanger","bind","init","renderDateHelper","e","onChange","target","files","date","Date","day","getDate","month","getMonth","year","getFullYear","fullDate","stringDate","toString","touched","formValues","history","push","handleSubmit","onSubmit","validate","values","firstname","isAlpha","middlename","lastname","password","passwordConfirm","equals","phoneNumber","dateOfBirth","copyOfId","physicalAddress","physicalAdress","email","validEmail","isEmail","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Button, Col, Container, Alert } from 'react-bootstrap/';\r\nimport FieldFileInput from './uploader';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport validator from 'validator';\r\nimport { signUpActionCreator } from '../actions/signUpActionCreator';\r\nimport _ from 'lodash'\r\n\r\n// import '../styles/form-styles';\r\nvar max =''\r\n\r\nclass SignUpForm extends Component {\r\n  parent_container = {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n\r\n  // placeholder=\"Copy Of ID\"\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChanger = this.onChanger.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    max =   this.renderDateHelper()\r\n  }\r\n\r\n  onChanger(e) {\r\n    const {\r\n      input: { onChange },\r\n    } = this.props;\r\n    onChange(e.target.files[0]);\r\n    console.log(e.target.files[0]);\r\n  }\r\n\r\n\r\n  renderDateHelper(){\r\n   \r\n    var date = new Date()\r\n    var day = date.getDate()\r\n    var month = date.getMonth() +1\r\n    var year = date.getFullYear()\r\n\r\n    var fullDate = year + '-' + month + '-' + day\r\n     const stringDate = _.toString(fullDate)\r\n    console.log('fullDate ',fullDate)\r\n    console.log('StringDate ',stringDate)\r\n\r\n    \r\n    return stringDate\r\n\r\n}\r\n\r\n  renderError({ error, touched }) {\r\n    if (error && touched) {\r\n      return (\r\n        <div className=''>\r\n          <Alert variant='danger'>{error}</Alert>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    max,\r\n    min\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            max={max}\r\n            min={min}\r\n\r\n          />\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // renderHelp({input,type,label,controlId,accept,required,placeholder}){\r\n\r\n  //     return (\r\n  //       <div className=\"container\">\r\n  //         <div className=\"custom-file\">\r\n  //           <input {...input} id=\"inputGroupFile01\" onChange={this.onChanger()} accept={accept}placeholder ={placeholder} required={required} type={type} className=\"custom-file-input\" />\r\n  //     <label className=\"custom-file-label\" for=\"inputGroupFile01\">{label}</label>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n\r\n  // }\r\n\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n\r\n    this.props.signUpActionCreator(formValues, () => {\r\n      this.props.history.push('/selectGroup');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const maxDate = new Date();\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className='  '>\r\n          <div className=''>\r\n            <div className='home-inner-signUp'>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n\r\n              <div className='container   mt-5 col-md-9 bg-secondary text-dark '>\r\n                <div className=''>\r\n                  <div className='row'>\r\n                    <h3 className='container text-center display-4 col-md-8 text-dark'>\r\n                      Sign Up\r\n                    </h3>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <Form\r\n                    encType='multipart/form-data'\r\n                    onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n                  >\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='firstname'\r\n                        label='Firstname'\r\n                        component={this.renderHelper}\r\n                        type='text'\r\n                        required='required'\r\n                        placeholder='Enter Firstname'\r\n                        controlId='formGroupFirstname'\r\n                        className='col-md-4'\r\n                      />\r\n                      <Field\r\n                        name='middlename'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Middlename'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Middlename'\r\n                        controlId='formGroupMiddlename'\r\n                        className='col-md-4'\r\n                      />\r\n                      <Field\r\n                        name='lastname'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Lastname'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Lastname'\r\n                        controlId='formGroupLastname'\r\n                        className='col-md-4'\r\n                      />\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='email'\r\n                        component={this.renderHelper}\r\n                        type='email'\r\n                        required='required'\r\n                        label='Email'\r\n                        placeholder='Enter Email'\r\n                        controlId='formGroupEmail'\r\n                        className='col-md-6'\r\n                      />\r\n\r\n                      <Field\r\n                        name='dateOfBirth'\r\n                        type='date'\r\n                        required='required'\r\n                        label='Date Of Birth'\r\n                        min='1910-01-30'\r\n                        max={max}\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter DOB'\r\n                        controlId='formGroupDOB'\r\n                        className='col-md-6'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='physicalAddress'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Physical Address'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Physical Address'\r\n                        controlId='formGroupPhysicalAddress'\r\n                        className='col-md-4'\r\n                      />\r\n\r\n                      <Field\r\n                        name='city'\r\n                        type='text'\r\n                        required='required'\r\n                        label='City'\r\n                        component={this.renderHelper}\r\n                        placeholder='City'\r\n                        controlId='formGroupCountry'\r\n                        className='col-md-4'\r\n                      />\r\n\r\n                      <Field\r\n                        name='phoneNumber'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Mobile Number'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Mobile Number'\r\n                        controlId='formGroupMobileNumber'\r\n                        className='col-md-4'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='password'\r\n                        type='password'\r\n                        required='required'\r\n                        label='Password'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Password'\r\n                        controlId='formGroupPassword'\r\n                        className='col-md-6'\r\n                      />\r\n                      <Field\r\n                        name='passwordConfirm'\r\n                        type='password'\r\n                        required='required'\r\n                        label='Confirm password'\r\n                        component={this.renderHelper}\r\n                        placeholder='Confirm password'\r\n                        controlId='formGrouppasswordConfirm'\r\n                        className='col-md-6'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field name='copyOfId' component={FieldFileInput} />\r\n                    </Form.Row>\r\n                    <br />\r\n\r\n                    <div class='row'>\r\n                      <Button\r\n                        className='container  col-md-2 '\r\n                        type='submit'\r\n                        variant='success'\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <br />\r\n                  </Form>\r\n\r\n                  {/* <div className='container col-12'> */}\r\n\r\n                  {/* </div> */}\r\n\r\n                  {/* <form className=\"center\" encType=\"multipart/form-data\" onSubmit={handleSubmit(this.onSubmit.bind(this))} >\r\n               \r\n              <br />\r\n\r\n          \r\n             \r\n             \r\n                     <div><Alert >{this.props.errorMessage}</Alert></div>\r\n\r\n            \r\n             </form> */}\r\n\r\n                  {/* <div className=\"center col l2\" >\r\n\r\n               <h3 className=\"grey-text text-darken-3\">Sign up</h3>\r\n             </div> */}\r\n                </div>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const error = {};\r\n\r\n  if (!values.firstname) {\r\n    error.firstname = 'Field is Required';\r\n  } else if (values.firstname) {\r\n    if (!validator.isAlpha(values.firstname)) {\r\n      error.firstname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.middlename) {\r\n    error.middlename = 'Field is Required';\r\n  } else if (values.middlename) {\r\n    if (!validator.isAlpha(values.middlename)) {\r\n      error.middlename =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.lastname) {\r\n    error.lastname = 'Field is Required';\r\n  } else if (values.lastname) {\r\n    if (!validator.isAlpha(values.lastname)) {\r\n      error.lastname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n\r\n  if (!values.password) {\r\n    error.password = 'Field is Required';\r\n  } else if (values.password) {\r\n  }\r\n  if (!values.passwordConfirm) {\r\n    error.passwordConfirm = 'Field is Required';\r\n  } else if (values.passwordConfirm) {\r\n    if (!validator.equals(values.passwordConfirm, values.password)) {\r\n      error.passwordConfirm = 'Passwords do not Match';\r\n    }\r\n  }\r\n\r\n  if (!values.phoneNumber) {\r\n    error.phoneNumber = 'Field is Required';\r\n  }\r\n  if (!values.dateOfBirth) {\r\n    error.dateOfBirth = 'Field is Required';\r\n  }\r\n  if (!values.copyOfId) {\r\n    error.copyOfId = 'Field is Required';\r\n  }\r\n  if (!values.physicalAddress) {\r\n    error.physicalAdress = 'Field is Required';\r\n  }\r\n  if (!values.email) {\r\n    error.email = 'Field is Required';\r\n  } else if (values.email) {\r\n    const validEmail = validator.isEmail(values.email);\r\n\r\n    if (!validEmail) {\r\n      error.email = 'Invalid Email';\r\n    }\r\n  }\r\n\r\n  //console.log('Error ', errors)\r\n  return error;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'signUpForm',\r\n  validate,\r\n})(connect(null, { signUpActionCreator })(SignUpForm));\r\n"]},"metadata":{},"sourceType":"module"}