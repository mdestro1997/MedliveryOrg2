{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{GetAllDoctors,GetAllDoctorsError}from'./typeAuth';export function getAllDoctorsActionCreator(_x){return _getAllDoctorsActionCreator.apply(this,arguments);}function _getAllDoctorsActionCreator(){_getAllDoctorsActionCreator=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('Values Submitted',values);_context.next=4;return axios.get('http://localhost:5000/getAllDoctors',values);case 4:request=_context.sent;console.log('token is',request.data);//  localStorage.setItem('token',request.data)\n// cb();\n//     localStorage.setItem('token',request.data)\nreturn _context.abrupt(\"return\",{type:GetAllDoctors,payload:request.data});case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);case 11:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return _getAllDoctorsActionCreator.apply(this,arguments);}export function load(_x2){return _load.apply(this,arguments);}function _load(){_load=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.log('token is',values);return _context2.abrupt(\"return\",{type:GetAllDoctors,payload:values});case 2:case\"end\":return _context2.stop();}}},_callee2);}));return _load.apply(this,arguments);}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/getAllDoctors.js"],"names":["axios","GetAllDoctors","GetAllDoctorsError","getAllDoctorsActionCreator","values","console","log","get","request","data","type","payload","load"],"mappings":"2WAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,aAAT,CAAwBC,kBAAxB,KAAkD,YAAlD,CAEA,eAAsBC,CAAAA,0BAAtB,+D,2HAAO,iBAA0CC,MAA1C,8IAEHC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCF,MAAhC,EAFG,sBAImBJ,CAAAA,KAAK,CAACO,GAAN,CACpB,qCADoB,CAEpBH,MAFoB,CAJnB,QAIGI,OAJH,eAQHH,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBE,OAAO,CAACC,IAAhC,EACA;AACA;AACA;AAXG,gCAaI,CACLC,IAAI,CAAET,aADD,CAELU,OAAO,CAAEH,OAAO,CAACC,IAFZ,CAbJ,8H,6DA0BP,eAAsBG,CAAAA,IAAtB,0C,+EAAO,kBAAoBR,MAApB,sHACHC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBF,MAAxB,EADG,iCAGI,CACHM,IAAI,CAAET,aADH,CAEHU,OAAO,CAACP,MAFL,CAHJ,0D","sourcesContent":["import axios from 'axios';\r\nimport { GetAllDoctors, GetAllDoctorsError } from './typeAuth';\r\n\r\nexport async function getAllDoctorsActionCreator(values) {\r\n  try {\r\n    console.log('Values Submitted', values);\r\n\r\n    const request = await axios.get(\r\n      'http://localhost:5000/getAllDoctors',\r\n      values\r\n    );\r\n    console.log('token is', request.data);\r\n    //  localStorage.setItem('token',request.data)\r\n    // cb();\r\n    //     localStorage.setItem('token',request.data)\r\n\r\n    return {\r\n      type: GetAllDoctors,\r\n      payload: request.data,\r\n    };\r\n  } catch (e) {\r\n    //   return{\r\n    //          type:AuthError,\r\n    //          payload: 'Unsuccessful Login'\r\n    //   }\r\n  }\r\n}\r\n    \r\n\r\nexport async function load(values){\r\n    console.log('token is', values);\r\n\r\n    return {\r\n        type: GetAllDoctors, \r\n        payload:values\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}