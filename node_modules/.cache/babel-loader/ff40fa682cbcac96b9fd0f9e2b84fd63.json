{"ast":null,"code":"import axios from 'axios';\nimport { FoundSearch, SearchNotFount } from '../typeAuth';\nexport async function searchAndUpdateActionCreator(values) {\n  try {\n    console.log('Values Submitted', values);\n    const email = values.email;\n    const request = await axios.get(`http://localhost:5000/searchAndUpdate?email=${email}`); //     const request = await axios.get(`https://glacial-wave-31511.herokuapp.com/searchAndUpdate?email=${email}`)\n\n    console.log('user gottt', request.data);\n    localStorage.setItem('token', request.data); // cb();\n    //     localStorage.setItem('token',request.data)\n\n    return {\n      type: FoundSearch,\n      payload: request.data\n    };\n  } catch (e) {\n    return {\n      type: SearchNotFount,\n      payload: 'Unsuccessful Login'\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/PatientActionCreators/searchAndUpdateActionCreator.js"],"names":["axios","FoundSearch","SearchNotFount","searchAndUpdateActionCreator","values","console","log","email","request","get","data","localStorage","setItem","type","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAoBC,cAApB,QAAyC,aAAzC;AAGA,OAAQ,eAAeC,4BAAf,CAA4CC,MAA5C,EAAmD;AAEtD,MAAG;AAGJC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AACA,UAAMG,KAAK,GAAEH,MAAM,CAACG,KAApB;AAEA,UAAMC,OAAO,GAAG,MAAMR,KAAK,CAACS,GAAN,CAAW,+CAA8CF,KAAM,EAA/D,CAAtB,CANI,CAOR;;AACIF,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BE,OAAO,CAACE,IAAlC;AACCC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,OAAO,CAACE,IAArC,EATG,CAUJ;AACJ;;AAEG,WAAM;AAGDG,MAAAA,IAAI,EAACZ,WAHJ;AAIDa,MAAAA,OAAO,EAACN,OAAO,CAACE;AAJf,KAAN;AAQF,GArBI,CAqBJ,OAAMK,CAAN,EAAQ;AAIH,WAAM;AACCF,MAAAA,IAAI,EAACX,cADN;AAECY,MAAAA,OAAO,EAAE;AAFV,KAAN;AAIL;AAEA","sourcesContent":["import axios from 'axios'\r\nimport {FoundSearch,SearchNotFount} from '../typeAuth'\r\n\r\n\r\nexport  async function searchAndUpdateActionCreator(values){\r\n  \r\n     try{\r\n\r\n            \r\n    console.log('Values Submitted', values)\r\n    const email= values.email\r\n    \r\n    const request = await axios.get(`http://localhost:5000/searchAndUpdate?email=${email}`)\r\n//     const request = await axios.get(`https://glacial-wave-31511.herokuapp.com/searchAndUpdate?email=${email}`)\r\n    console.log('user gottt', request.data)\r\n     localStorage.setItem('token',request.data)\r\n    // cb();\r\n//     localStorage.setItem('token',request.data)\r\n\r\n   return{  \r\n    \r\n\r\n        type:FoundSearch,\r\n        payload:request.data\r\n   }\r\n   \r\n\r\n}catch(e){\r\n     \r\n\r\n\r\n      return{\r\n             type:SearchNotFount,\r\n             payload: 'Unsuccessful Login'\r\n      }\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}