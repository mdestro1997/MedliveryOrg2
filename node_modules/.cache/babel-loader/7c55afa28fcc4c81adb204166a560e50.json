{"ast":null,"code":"import _classCallCheck from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Form,Button}from'react-bootstrap';import{connect}from'react-redux';import{Field,reduxForm}from'redux-form';import{load}from'../actions/getAllDoctors';import _ from'lodash';var data={// used to populate \"account\" reducer when \"Load\" is clicked\nfirstName:'Jane',email:'mathubar@stanbic.com'};var min='';var BookAppointment=/*#__PURE__*/function(_Component){_inherits(BookAppointment,_Component);var _super=_createSuper(BookAppointment);function BookAppointment(){var _this;_classCallCheck(this,BookAppointment);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderHelper=function(_ref){var input=_ref.input,type=_ref.type,disabled=_ref.disabled,label=_ref.label,controlId=_ref.controlId,className=_ref.className,placeholder=_ref.placeholder,required=_ref.required,accept=_ref.accept,meta=_ref.meta,error=_ref.error,min=_ref.min;console.log('meta ',meta);return/*#__PURE__*/React.createElement(\"div\",{className:className},/*#__PURE__*/React.createElement(Form.Group,{controlId:controlId},/*#__PURE__*/React.createElement(Form.Label,null,label),/*#__PURE__*/React.createElement(Form.Control,Object.assign({required:true},input,{type:type,placeholder:placeholder,disabled:disabled,min:min}))));};return _this;}_createClass(BookAppointment,[{key:\"componentDidMount\",value:function componentDidMount(){var anotherHolding=JSON.stringify(this.props.initialValues);// console.log('holding' + holding)\nconsole.log('anotherHolding'+anotherHolding);// console.log('holding' + this.props.dataFill)\nconsole.log('anotherHolding'+this.props.initialValues);// console.log('holding' + JSON.parse(holding))\nconsole.log('anotherHolding'+JSON.parse(anotherHolding));//   const dataa = {  // used to populate \"account\" reducer when \"Load\" is clicked\n//   firstName: 'Jane',\n//   email:'mathubar@stanbic.com',\n// }\n// this.props.load(dataa)\nmin=this.renderDateHelper();console.log('ming ',min);}},{key:\"renderDateHelper\",value:function renderDateHelper(){var date=new Date();var day=date.getDate();var month=date.getMonth()+1;var year=date.getFullYear();var fullDate=year+'-'+month+'-'+day;var stringDate=_.toString(fullDate);console.log('fullDate ',fullDate);console.log('StringDate ',stringDate);return stringDate;}},{key:\"render\",value:function render(){var handleSubmit=this.props.handleSubmit;return/*#__PURE__*/React.createElement(\"div\",{className:\"container mt-5 mb-5\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text-center text-secondary mb-5\"},\"Book Appointment\"),/*#__PURE__*/React.createElement(Form,null,/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"Patientfirstname\",label:\"Patient Name\",component:this.renderHelper,type:\"text\",disabled:\"disabled\",required:\"required\",placeholder:\"Patient Name\",controlId:\"formGroupFirstname\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"Patientlastname\",label:\"Patient Lastname\",component:this.renderHelper,type:\"text\",disabled:\"disabled\",required:\"required\",placeholder:\"Patient Lastname\",controlId:\"formGroupFirstname\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"Patientemail\",label:\"Patient Email\",component:this.renderHelper,disabled:\"disabled\",type:\"text\",required:\"required\",placeholder:\"Patient Email\",controlId:\"formGroupPatientEmail\",className:\"col-md-4\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"department\",label:\"Doctor Category\",component:this.renderHelper,disabled:\"disabled\",type:\"text\",required:\"required\",placeholder:\"Doctor Category\",controlId:\"formGroupDoctorCategory\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(Field,{name:\"lastname\",label:\"Doctor\",component:this.renderHelper,disabled:\"disabled\",type:\"text\",required:\"required\",placeholder:\"Doctor name\",controlId:\"formGroupDoctorName\",className:\"col-md-4\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"col-md-4\"},/*#__PURE__*/React.createElement(Form.Group,null,/*#__PURE__*/React.createElement(Form.Label,null,\"Location\"),/*#__PURE__*/React.createElement(Form.Control,{as:\"select\",placeholder:\"Select Hospital\"},/*#__PURE__*/React.createElement(\"option\",null,\"Select Hospital\"),/*#__PURE__*/React.createElement(\"option\",null,\"Kalafhi Private Hospital\"),/*#__PURE__*/React.createElement(\"option\",null,\"Gaborone Private Hospital\"),/*#__PURE__*/React.createElement(\"option\",null,\"Bokamoso Private Hospital\"),/*#__PURE__*/React.createElement(\"option\",null,\"Sidilega Private Hospital\"),/*#__PURE__*/React.createElement(\"option\",null,\"AO Private Clinic\"))))),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Field,{name:\"AppointmentDate\",label:\"Appointment Date\",type:\"date\",min:min,component:this.renderHelper,required:\"required\",placeholder:\"Doctor name\",controlId:\"formGroupAppointmentDate\",className:\"col-md-6\"}),/*#__PURE__*/React.createElement(Field,{name:\"AppointmentTime\",label:\"Appointment Time\",type:\"time\"// min={min}\n,component:this.renderHelper,required:\"required\",placeholder:\"Appointment Time\",controlId:\"formGroupAppointmentTime\",className:\"col-md-6\"})),/*#__PURE__*/React.createElement(Form.Row,null,/*#__PURE__*/React.createElement(Button,{className:\"container col-md-4 mt-5\",type:\"submit\",variant:\"success\"},' ',\"Book Now\",' '))));}}]);return BookAppointment;}(Component);// function mapStateToProps(state, props) {\n//   return {\n//     initialValues: state.getAllDoctorsProfiles.doctorsProfiles,\n//     // dataFill:state.getAllDoctorsProfiles.doctorsProfiles\n//   };\n// }\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\nBookAppointment=reduxForm({form:'initializeFromState',enableReinitialize:true})(BookAppointment);// now set initialValues using data from your store state\nBookAppointment=connect(function(state){return{initialValues:_.merge(state.authReducer.authenticated,_.pick(state.getAllDoctorsProfiles.doctorsProfiles,'department','owner'))};},{load:load})(BookAppointment);export default BookAppointment;// export default reduxForm({\n//   form: 'initializeFromState',\n//   enableReinitialize: true\n// })(connect(mapStateToProps,{ load }\n// )(BookAppointment));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/bookAppointment.js"],"names":["React","Component","Form","Button","connect","Field","reduxForm","load","_","data","firstName","email","min","BookAppointment","renderHelper","input","type","disabled","label","controlId","className","placeholder","required","accept","meta","error","console","log","anotherHolding","JSON","stringify","props","initialValues","parse","renderDateHelper","date","Date","day","getDate","month","getMonth","year","getFullYear","fullDate","stringDate","toString","handleSubmit","form","enableReinitialize","state","merge","authReducer","authenticated","pick","getAllDoctorsProfiles","doctorsProfiles"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { load } from '../actions/getAllDoctors';\r\nimport _ from 'lodash';\r\n\r\nconst data = {\r\n  // used to populate \"account\" reducer when \"Load\" is clicked\r\n  firstName: 'Jane',\r\n  email: 'mathubar@stanbic.com',\r\n};\r\nvar min =''\r\n\r\nclass BookAppointment extends Component {\r\n\r\n  componentDidMount() {\r\n    var anotherHolding = JSON.stringify(this.props.initialValues);\r\n    // console.log('holding' + holding)\r\n    console.log('anotherHolding' + anotherHolding);\r\n\r\n    // console.log('holding' + this.props.dataFill)\r\n    console.log('anotherHolding' + this.props.initialValues);\r\n\r\n    // console.log('holding' + JSON.parse(holding))\r\n    console.log('anotherHolding' + JSON.parse(anotherHolding));\r\n\r\n    //   const dataa = {  // used to populate \"account\" reducer when \"Load\" is clicked\r\n    //   firstName: 'Jane',\r\n    //   email:'mathubar@stanbic.com',\r\n\r\n    // }\r\n\r\n    // this.props.load(dataa)\r\n   min= this.renderDateHelper()\r\n   console.log('ming ',min)\r\n  }\r\n\r\n\r\nrenderDateHelper(){\r\n   \r\n    var date = new Date()\r\n    var day = date.getDate()\r\n    var month = date.getMonth() +1\r\n    var year = date.getFullYear()\r\n\r\n    var fullDate = year + '-' + month + '-' + day\r\n     const stringDate = _.toString(fullDate)\r\n    console.log('fullDate ',fullDate)\r\n    console.log('StringDate ',stringDate)\r\n\r\n    \r\n    return stringDate\r\n\r\n}\r\n  \r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    disabled,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    min,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n            min={min}\r\n          />\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div className='container mt-5 mb-5'>\r\n        <h3 className='text-center text-secondary mb-5'>Book Appointment</h3>\r\n\r\n        <Form>\r\n          <Form.Row>\r\n            <Field\r\n              name='Patientfirstname'\r\n              label='Patient Name'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              disabled='disabled'\r\n              required='required'\r\n              placeholder='Patient Name'\r\n              controlId='formGroupFirstname'\r\n              className='col-md-4'\r\n            />\r\n            <Field\r\n              name='Patientlastname'\r\n              label='Patient Lastname'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              disabled='disabled'\r\n              required='required'\r\n              placeholder='Patient Lastname'\r\n              controlId='formGroupFirstname'\r\n              className='col-md-4'\r\n            />\r\n            {/* <div className='col-md-6'>\r\n      \r\n               <Form.Group>\r\n                 <Form.Label>Patient Name</Form.Label>\r\n                   <Form.Control \r\n                   type='text'\r\n                   placeholder='Patient Name'\r\n                   />\r\n                 \r\n               </Form.Group>\r\n               </div> */}\r\n            <Field\r\n              name='Patientemail'\r\n              label='Patient Email'\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              required='required'\r\n              placeholder='Patient Email'\r\n              controlId='formGroupPatientEmail'\r\n              className='col-md-4'\r\n            />\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            {/* <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control as='select' placeholder='Category'>\r\n                  <option>General Physician </option>\r\n\r\n                  <option>Cardiologist</option>\r\n                  <option>Neurosurgeon</option>\r\n                  <option>Oncologist</option>\r\n                  <option>Orthopaedic Surgeon</option>\r\n                  <option>Neurologist</option>\r\n                  <option>Gastroenterologist</option>\r\n                  <option>ENT</option>\r\n                  <option>Dentist</option>\r\n                  <option>Psychiatrist</option>\r\n                  <option>Urologist</option>\r\n                  <option>Gynecologits</option>\r\n                  <option>Pediatrician</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n\r\n            <Field\r\n              name='department'\r\n              label='Doctor Category'\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              required='required'\r\n              placeholder='Doctor Category'\r\n              controlId='formGroupDoctorCategory'\r\n              className='col-md-4'\r\n            />\r\n\r\n            <Field\r\n              name='lastname'\r\n              label='Doctor'\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              required='required'\r\n              placeholder='Doctor name'\r\n              controlId='formGroupDoctorName'\r\n              className='col-md-4'\r\n            />\r\n            {/* <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Doctor</Form.Label>\r\n                <Form.Control as='select' placeholder='Select Doctor'>\r\n                  <option>Select Doctor</option>\r\n\r\n                  <option>Dr Mathuba</option>\r\n                  <option>Dr Mmopiemang</option>\r\n                  <option>Dr Gure</option>\r\n                  <option>Dr Mosepele</option>\r\n                  <option>Dr Kang</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n\r\n            <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control as='select' placeholder='Select Hospital'>\r\n                  <option>Select Hospital</option>\r\n\r\n                  <option>Kalafhi Private Hospital</option>\r\n                  <option>Gaborone Private Hospital</option>\r\n                  <option>Bokamoso Private Hospital</option>\r\n                  <option>Sidilega Private Hospital</option>\r\n                  <option>AO Private Clinic</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            {/* <div className='col-md-6'>\r\n              <Form.Group>\r\n                <Form.Label>Appointment Date</Form.Label> */}\r\n                <Field\r\n                name='AppointmentDate'\r\n              label='Appointment Date'\r\n              type='date'\r\n              min={min}\r\n              component={this.renderHelper}\r\n              required='required'\r\n              placeholder='Doctor name'\r\n              controlId='formGroupAppointmentDate'\r\n              className='col-md-6'\r\n                 />\r\n              {/* </Form.Group>\r\n            </div> */}\r\n\r\n            {/* <div className='col-md-6'> */}\r\n              {/* <Form.Group>\r\n                <Form.Label>Available Appointment Time</Form.Label> */}\r\n                <Field\r\n                name='AppointmentTime'\r\n              label='Appointment Time'\r\n              type='time'\r\n              // min={min}\r\n              component={this.renderHelper}\r\n              required='required'\r\n              placeholder='Appointment Time'\r\n              controlId='formGroupAppointmentTime'\r\n              className='col-md-6'\r\n                />\r\n              {/* </Form.Group> */}\r\n            {/* </div> */}\r\n\r\n            {/* <div className='col-md-6'>\r\n      \r\n               <Form.Group>\r\n                 <Form.Label>Patient Email</Form.Label>\r\n                   <Form.Control \r\n                   type='text'\r\n                   placeholder='Patient Email'\r\n                   />\r\n                 \r\n               </Form.Group>\r\n               </div> */}\r\n          </Form.Row>\r\n          <Form.Row>\r\n            <Button\r\n              className='container col-md-4 mt-5'\r\n              type='submit'\r\n              variant='success'\r\n            >\r\n              {' '}\r\n              Book Now{' '}\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function mapStateToProps(state, props) {\r\n//   return {\r\n//     initialValues: state.getAllDoctorsProfiles.doctorsProfiles,\r\n//     // dataFill:state.getAllDoctorsProfiles.doctorsProfiles\r\n//   };\r\n// }\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nBookAppointment = reduxForm({\r\n  form: 'initializeFromState',\r\n  enableReinitialize: true,\r\n})(BookAppointment);\r\n\r\n// now set initialValues using data from your store state\r\nBookAppointment = connect(\r\n  (state) => ({\r\n    initialValues: _.merge(state.authReducer.authenticated, _.pick(state.getAllDoctorsProfiles.doctorsProfiles,'department','owner'))\r\n  }),\r\n  { load }\r\n)(BookAppointment);\r\n\r\nexport default BookAppointment;\r\n\r\n// export default reduxForm({\r\n//   form: 'initializeFromState',\r\n//   enableReinitialize: true\r\n// })(connect(mapStateToProps,{ load }\r\n// )(BookAppointment));\r\n"]},"metadata":{},"sourceType":"module"}