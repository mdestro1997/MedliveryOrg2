{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';//import 'bootstrap/dist/css/bootstrap.min.css' ;\nimport{Provider}from'react-redux';import{createStore,applyMiddleware}from'redux';import promise from'redux-promise';import App from'./App';//import { reduxForm } from 'redux-form';\nimport reducers from'./Reducer.js';//import authReducer from './Reducer.js/authReducer'\n//import { reducer } from 'redux-form';\n// export default ({children,initialState ={}}) =>{}\nvar createStoreWithMiddleware=applyMiddleware(promise)(createStore);// ReactDOM.render(\n// <Provider\n// store={createStoreWithMiddleware(reducers)}></Provider>\n// const store = createStore(\n//     reducers,\n//     {authReducer:{authenticated:localStorage.getItem('token')}},\n//     applyMiddleware(promise)\n// )  \nconsole.log('localStore',localStorage.getItem('token'));ReactDOM.render(/*#__PURE__*/React.createElement(Provider,{store:createStoreWithMiddleware(reducers)},\" \",/*#__PURE__*/React.createElement(App,null)),document.querySelector('#root'));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","promise","App","reducers","createStoreWithMiddleware","console","log","localStorage","getItem","render","document","querySelector"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA;AACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,OAAQC,WAAR,CAAoBC,eAApB,KAA0C,OAA1C,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,OAAhB,CACA;AACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CACA;AACA;AAEA;AAEA,GAAMC,CAAAA,yBAAyB,CAAGJ,eAAe,CAACC,OAAD,CAAf,CAAyBF,WAAzB,CAAlC,CAKA;AAIA;AACA;AAEI;AACA;AACA;AACA;AACA;AAEAM,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAyBC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAzB,EAEJX,QAAQ,CAACY,MAAT,cACI,oBAAC,QAAD,EAAU,KAAK,CAAEL,yBAAyB,CAACD,QAAD,CAA1C,mBAAuD,oBAAC,GAAD,MAAvD,CADJ,CAGEO,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAHF","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import 'bootstrap/dist/css/bootstrap.min.css' ;\r\nimport {Provider} from 'react-redux'\r\nimport {createStore,applyMiddleware} from 'redux'\r\nimport promise from 'redux-promise'\r\nimport App from './App'\r\n//import { reduxForm } from 'redux-form';\r\nimport reducers from './Reducer.js'\r\n//import authReducer from './Reducer.js/authReducer'\r\n//import { reducer } from 'redux-form';\r\n\r\n// export default ({children,initialState ={}}) =>{}\r\n\r\nconst createStoreWithMiddleware = applyMiddleware(promise)(createStore)\r\n\r\n\r\n\r\n\r\n// ReactDOM.render(\r\n\r\n    \r\n\r\n// <Provider\r\n// store={createStoreWithMiddleware(reducers)}></Provider>\r\n\r\n    // const store = createStore(\r\n    //     reducers,\r\n    //     {authReducer:{authenticated:localStorage.getItem('token')}},\r\n    //     applyMiddleware(promise)\r\n    // )  \r\n \r\n    console.log('localStore',localStorage.getItem('token'))\r\n\r\nReactDOM.render(\r\n    <Provider store={createStoreWithMiddleware(reducers)}> <App /></Provider>\r\n\r\n, document.querySelector('#root'))\r\n"]},"metadata":{},"sourceType":"module"}