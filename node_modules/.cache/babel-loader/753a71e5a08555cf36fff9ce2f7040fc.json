{"ast":null,"code":"import axios from 'axios';\nimport { updatePatientAppointmentStatusSuccessful, updatePatientAppointmentStatusUnsuccessful } from './typeAuth';\nexport async function updatePatientAppointmentStatusActionCreator(values, cb) {\n  //const contactUpload = values.contactUpload\n  let formData = new FormData(); //const formData = new FormData();\n\n  console.log('fomrdatapa ', values.copyOfMedicalHistory);\n  formData.append('copyOfMedicalHistory', values.copyOfMedicalHistory);\n  console.log('fomrdatar ', formData);\n  console.log('fomrdatapareeerrr ', JSON.stringify(values)); // delete values.copyOfMedicalHistory;\n\n  formData.append('value', JSON.stringify(values)); //console.log('fomrdata ',formData)\n  // const obj = {values,formData};\n\n  formData.append('value', values);\n\n  try {\n    axios.defaults.headers = {\n      'Authorization': `Bearer ${values.token}`\n    };\n    console.log('reschedule Details', values);\n    const request = await axios.patch(`http://localhost:5000/doctorUpdatingPatientAppointmentStatus/${values.id}`); //     const request = await axios.post('https://glacial-wave-31511.herokuapp.com/user/login',values)\n\n    console.log('token is', request.data.token);\n    console.log('tokencc is', request.data);\n    localStorage.setItem('token', request.data.token);\n    cb(); //     localStorage.setItem('token',request.data)\n\n    return {\n      type: updatePatientAppointmentStatusSuccessful,\n      payload: request.data\n    };\n  } catch (e) {\n    return {\n      type: updatePatientAppointmentStatusUnsuccessful,\n      payload: 'Updating Patient Appointment Unsuccessful'\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/updatePatientAppointmentStatusActionCreator.js"],"names":["axios","updatePatientAppointmentStatusSuccessful","updatePatientAppointmentStatusUnsuccessful","updatePatientAppointmentStatusActionCreator","values","cb","formData","FormData","console","log","copyOfMedicalHistory","append","JSON","stringify","defaults","headers","token","request","patch","id","data","localStorage","setItem","type","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,wCAAR,EAAiDC,0CAAjD,QAAkG,YAAlG;AAGA,OAAQ,eAAeC,2CAAf,CAA2DC,MAA3D,EAAkEC,EAAlE,EAAqE;AAIzE;AACJ,MAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf,CAL6E,CAM7E;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0BL,MAAM,CAACM,oBAAjC;AAEAJ,EAAAA,QAAQ,CAACK,MAAT,CAAgB,sBAAhB,EAAuCP,MAAM,CAACM,oBAA9C;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAAyBH,QAAzB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAiCG,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAjC,EAX6E,CAY7E;;AAEAE,EAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAwBC,IAAI,CAACC,SAAL,CAAeT,MAAf,CAAxB,EAd6E,CAe7E;AACA;;AAEAE,EAAAA,QAAQ,CAACK,MAAT,CAAgB,OAAhB,EAAwBP,MAAxB;;AAGK,MAAG;AAEAJ,IAAAA,KAAK,CAACc,QAAN,CAAeC,OAAf,GAAuB;AAEnB,uBAAiB,UAASX,MAAM,CAACY,KAAM;AAFpB,KAAvB;AAIJR,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCL,MAAlC;AAGA,UAAMa,OAAO,GAAG,MAAMjB,KAAK,CAACkB,KAAN,CAAa,gEAA+Dd,MAAM,CAACe,EAAG,EAAtF,CAAtB,CATI,CAWR;;AACIX,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBQ,OAAO,CAACG,IAAR,CAAaJ,KAArC;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BQ,OAAO,CAACG,IAAlC;AAECC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BL,OAAO,CAACG,IAAR,CAAaJ,KAA1C;AACDX,IAAAA,EAAE,GAhBE,CAiBR;;AAEG,WAAM;AAEDkB,MAAAA,IAAI,EAACtB,wCAFJ;AAGDuB,MAAAA,OAAO,EAACP,OAAO,CAACG;AAHf,KAAN;AAOF,GA1BI,CA0BJ,OAAMK,CAAN,EAAQ;AAIH,WAAM;AACCF,MAAAA,IAAI,EAACrB,0CADN;AAECsB,MAAAA,OAAO,EAAE;AAFV,KAAN;AAIL;AAEA","sourcesContent":["import axios from 'axios'\nimport {updatePatientAppointmentStatusSuccessful,updatePatientAppointmentStatusUnsuccessful} from './typeAuth'\n\n\nexport  async function updatePatientAppointmentStatusActionCreator(values,cb){\n  \n\n\n    //const contactUpload = values.contactUpload\nlet formData = new FormData()\n//const formData = new FormData();\nconsole.log('fomrdatapa ',values.copyOfMedicalHistory)\n\nformData.append('copyOfMedicalHistory',values.copyOfMedicalHistory)\nconsole.log('fomrdatar ',formData);\nconsole.log('fomrdatapareeerrr ',JSON.stringify(values))\n// delete values.copyOfMedicalHistory;\n\nformData.append('value',JSON.stringify(values))\n//console.log('fomrdata ',formData)\n// const obj = {values,formData};\n\nformData.append('value',values)\n\n\n     try{\n\n        axios.defaults.headers={\n\n            'Authorization':`Bearer ${values.token}`\n        }        \n    console.log('reschedule Details', values)\n\n\n    const request = await axios.patch(`http://localhost:5000/doctorUpdatingPatientAppointmentStatus/${values.id}`)\n\n//     const request = await axios.post('https://glacial-wave-31511.herokuapp.com/user/login',values)\n    console.log('token is', request.data.token)\n    console.log('tokencc is', request.data)\n\n     localStorage.setItem('token',request.data.token)\n    cb();\n//     localStorage.setItem('token',request.data)\n\n   return{  \n\n        type:updatePatientAppointmentStatusSuccessful,\n        payload:request.data\n   }\n   \n\n}catch(e){\n     \n\n\n      return{\n             type:updatePatientAppointmentStatusUnsuccessful,\n             payload: 'Updating Patient Appointment Unsuccessful'\n      }\n}\n\n}"]},"metadata":{},"sourceType":"module"}