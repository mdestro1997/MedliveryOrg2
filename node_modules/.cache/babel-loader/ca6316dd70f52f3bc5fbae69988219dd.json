{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{FoundSearch,SearchNotFount}from'./typeAuth';export function searchAndUpdateActionCreator(_x){return _searchAndUpdateActionCreator.apply(this,arguments);}function _searchAndUpdateActionCreator(){_searchAndUpdateActionCreator=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var email,request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;console.log('Values Submitted',values);email=values.email;_context.next=5;return axios.get(\"http://localhost:5000/searchAndUpdate?email=\".concat(email));case 5:request=_context.sent;console.log('user gottt',request.data);localStorage.setItem('token',request.data);// cb();\n//     localStorage.setItem('token',request.data)\nreturn _context.abrupt(\"return\",{type:FoundSearch,payload:request.data});case 11:_context.prev=11;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",{type:SearchNotFount,payload:'Unsuccessful Login'});case 14:case\"end\":return _context.stop();}}},_callee,null,[[0,11]]);}));return _searchAndUpdateActionCreator.apply(this,arguments);}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/searchAndUpdateActionCreator.js"],"names":["axios","FoundSearch","SearchNotFount","searchAndUpdateActionCreator","values","console","log","email","get","request","data","localStorage","setItem","type","payload"],"mappings":"2WAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,WAAR,CAAoBC,cAApB,KAAyC,YAAzC,CAGA,eAAuBC,CAAAA,4BAAvB,iE,+HAAQ,iBAA4CC,MAA5C,oJAKJC,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCF,MAAhC,EACMG,KANF,CAMSH,MAAM,CAACG,KANhB,uBAOkBP,CAAAA,KAAK,CAACQ,GAAN,uDAAyDD,KAAzD,EAPlB,QAOEE,OAPF,eAQJJ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAA0BG,OAAO,CAACC,IAAlC,EACCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA6BH,OAAO,CAACC,IAArC,EACD;AACJ;AAXQ,gCAaC,CAGDG,IAAI,CAACZ,WAHJ,CAIDa,OAAO,CAACL,OAAO,CAACC,IAJf,CAbD,4FAyBI,CACCG,IAAI,CAACX,cADN,CAECY,OAAO,CAAE,oBAFV,CAzBJ,uE","sourcesContent":["import axios from 'axios'\r\nimport {FoundSearch,SearchNotFount} from './typeAuth'\r\n\r\n\r\nexport  async function searchAndUpdateActionCreator(values){\r\n  \r\n     try{\r\n\r\n            \r\n    console.log('Values Submitted', values)\r\n    const email= values.email\r\n    const request = await axios.get(`http://localhost:5000/searchAndUpdate?email=${email}`)\r\n    console.log('user gottt', request.data)\r\n     localStorage.setItem('token',request.data)\r\n    // cb();\r\n//     localStorage.setItem('token',request.data)\r\n\r\n   return{  \r\n    \r\n\r\n        type:FoundSearch,\r\n        payload:request.data\r\n   }\r\n   \r\n\r\n}catch(e){\r\n     \r\n\r\n\r\n      return{\r\n             type:SearchNotFount,\r\n             payload: 'Unsuccessful Login'\r\n      }\r\n}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}