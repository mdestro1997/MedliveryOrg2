{"ast":null,"code":"import axios from 'axios'; //import { request } from 'http';\n\nimport { SuccessfulApplication, ErrorApplication } from '../typeAuth';\nexport async function applyFormActionCreator(values, cb) {\n  const token = localStorage.getItem('token');\n  console.log('wE ARE HERE ', values);\n  console.log('wE ARE HERE ', token); // const formData = new FormData();\n  // formData.append('copyOfMedicalHistory', values.copyOfMedicalHistory);\n\n  axios.defaults.headers = {\n    //data: values,\n    Accept: 'application/json',\n    'Content-Type': 'multipart/form-data',\n    Authorization: `Bearer ${token}`\n  };\n  const uploadConfig = await axios.get('http://localhost:5000/api/uploads'); //for PROD\n  // const uploadConfig = await axios.get('https://glacial-wave-31511.herokuapp.com/api/uploads');\n  // const resizedUpload = await axios.post('http://localhost:5000/api/resizeUploads',formData);\n  // console.log('resized img', resizedUpload.data)\n\n  delete axios.defaults.headers['Authorization'];\n  console.log('moving on!!');\n  await axios.put(uploadConfig.data.url, values.copyOfMedicalHistory, {\n    headers: {\n      'Content-Type': values.copyOfMedicalHistory.type\n    }\n  });\n  axios.defaults.headers = {\n    //data: values,\n    Accept: 'application/json',\n    'Content-Type': 'multipart/form-data',\n    Authorization: `Bearer ${token}`\n  };\n  delete values.token; //const contactUpload = values.contactUpload\n\n  const formData = new FormData();\n  console.log('fomrdatapa ', values.copyOfMedicalHistory);\n  formData.append('copyOfMedicalHistory', values.copyOfMedicalHistory);\n  console.log('fomrdatar ', formData);\n  console.log('fomrdatapareeerrr ', JSON.stringify(values)); // delete values.copyOfMedicalHistory;\n\n  formData.append('value', JSON.stringify(values)); //console.log('fomrdata ',formData)\n  // const obj = {values,formData};\n\n  formData.append('value', values);\n  formData.append('imageUrl', uploadConfig.data.key);\n\n  try {\n    console.log('SignUp Action Creator ', formData); // delete formData.token;\n\n    const request = await axios.post('http://localhost:5000/applyMedForm', formData); //for PROD\n    // const request = await axios.post(\n    //   'https://glacial-wave-31511.herokuapp.com/applyMedForm',\n    //   formData\n    // );\n\n    cb();\n    return {\n      type: SuccessfulApplication,\n      payload: request.data\n    };\n  } catch (e) {\n    return {\n      type: ErrorApplication,\n      payload: 'Oops! Something Went Wrong'\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Development/Medlivery/MedliveryMasterUpdated-main/src/actions/PatientActionCreators/applyFormActionCreator.js"],"names":["axios","SuccessfulApplication","ErrorApplication","applyFormActionCreator","values","cb","token","localStorage","getItem","console","log","defaults","headers","Accept","Authorization","uploadConfig","get","put","data","url","copyOfMedicalHistory","type","formData","FormData","append","JSON","stringify","key","request","post","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,qBAAT,EAA+BC,gBAA/B,QAAuD,aAAvD;AAEA,OAAO,eAAeC,sBAAf,CAAsCC,MAAtC,EAA8CC,EAA9C,EAAkD;AACvD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BN,MAA3B;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BJ,KAA3B,EAHuD,CAKvD;AACA;;AAEAN,EAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,GAAyB;AACvB;AAEAC,IAAAA,MAAM,EAAE,kBAHe;AAIvB,oBAAgB,qBAJO;AAKvBC,IAAAA,aAAa,EAAG,UAASR,KAAM;AALR,GAAzB;AAQA,QAAMS,YAAY,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,mCAAV,CAA3B,CAhBuD,CAmBvD;AACA;AAGA;AACA;;AACA,SAAOhB,KAAK,CAACW,QAAN,CAAeC,OAAf,CAAuB,eAAvB,CAAP;AACFH,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACE,QAAMV,KAAK,CAACiB,GAAN,CAAUF,YAAY,CAACG,IAAb,CAAkBC,GAA5B,EAAiCf,MAAM,CAACgB,oBAAxC,EAA8D;AAClER,IAAAA,OAAO,EAAE;AACP,sBAAgBR,MAAM,CAACgB,oBAAP,CAA4BC;AADrC;AADyD,GAA9D,CAAN;AAMArB,EAAAA,KAAK,CAACW,QAAN,CAAeC,OAAf,GAAyB;AACzB;AAEAC,IAAAA,MAAM,EAAE,kBAHiB;AAIzB,oBAAgB,qBAJS;AAKzBC,IAAAA,aAAa,EAAG,UAASR,KAAM;AALN,GAAzB;AAOA,SAAOF,MAAM,CAACE,KAAd,CAxCuD,CAyCvD;;AACA,QAAMgB,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BN,MAAM,CAACgB,oBAAlC;AAEAE,EAAAA,QAAQ,CAACE,MAAT,CAAgB,sBAAhB,EAAwCpB,MAAM,CAACgB,oBAA/C;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,QAA1B;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCe,IAAI,CAACC,SAAL,CAAetB,MAAf,CAAlC,EA/CuD,CAgDvD;;AAEAkB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBC,IAAI,CAACC,SAAL,CAAetB,MAAf,CAAzB,EAlDuD,CAmDvD;AACA;;AAEAkB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBpB,MAAzB;AACAkB,EAAAA,QAAQ,CAACE,MAAT,CAAgB,UAAhB,EAA2BT,YAAY,CAACG,IAAb,CAAkBS,GAA7C;;AACA,MAAI;AACFlB,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCY,QAAtC,EADE,CAEF;;AAEA,UAAMM,OAAO,GAAG,MAAM5B,KAAK,CAAC6B,IAAN,CACpB,oCADoB,EAEpBP,QAFoB,CAAtB,CAJE,CAQF;AACA;AACA;AACA;AACA;;AACAjB,IAAAA,EAAE;AACF,WAAO;AACLgB,MAAAA,IAAI,EAAEpB,qBADD;AAEL6B,MAAAA,OAAO,EAAEF,OAAO,CAACV;AAFZ,KAAP;AAID,GAlBD,CAkBE,OAAOa,CAAP,EAAU;AACV,WAAO;AACLV,MAAAA,IAAI,EAAEnB,gBADD;AAEL4B,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;AACF","sourcesContent":["import axios from 'axios';\r\n//import { request } from 'http';\r\nimport { SuccessfulApplication,ErrorApplication } from '../typeAuth';\r\n\r\nexport async function applyFormActionCreator(values, cb) {\r\n  const token = localStorage.getItem('token');\r\n  console.log('wE ARE HERE ',values)\r\n  console.log('wE ARE HERE ',token)\r\n\r\n  // const formData = new FormData();\r\n  // formData.append('copyOfMedicalHistory', values.copyOfMedicalHistory);\r\n\r\n  axios.defaults.headers = {\r\n    //data: values,\r\n\r\n    Accept: 'application/json',\r\n    'Content-Type': 'multipart/form-data',\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  const uploadConfig = await axios.get('http://localhost:5000/api/uploads');\r\n\r\n\r\n  //for PROD\r\n  // const uploadConfig = await axios.get('https://glacial-wave-31511.herokuapp.com/api/uploads');\r\n\r\n\r\n  // const resizedUpload = await axios.post('http://localhost:5000/api/resizeUploads',formData);\r\n  // console.log('resized img', resizedUpload.data)\r\n  delete axios.defaults.headers['Authorization'];\r\nconsole.log('moving on!!')\r\n  await axios.put(uploadConfig.data.url, values.copyOfMedicalHistory, {\r\n    headers: {\r\n      'Content-Type': values.copyOfMedicalHistory.type,\r\n    },\r\n  });\r\n\r\n  axios.defaults.headers = {\r\n  //data: values,\r\n\r\n  Accept: 'application/json',\r\n  'Content-Type': 'multipart/form-data',\r\n  Authorization: `Bearer ${token}`,\r\n};\r\n  delete values.token;\r\n  //const contactUpload = values.contactUpload\r\n  const formData = new FormData();\r\n  console.log('fomrdatapa ', values.copyOfMedicalHistory);\r\n\r\n  formData.append('copyOfMedicalHistory', values.copyOfMedicalHistory);\r\n  console.log('fomrdatar ', formData);\r\n  console.log('fomrdatapareeerrr ', JSON.stringify(values));\r\n  // delete values.copyOfMedicalHistory;\r\n\r\n  formData.append('value', JSON.stringify(values));\r\n  //console.log('fomrdata ',formData)\r\n  // const obj = {values,formData};\r\n\r\n  formData.append('value', values);\r\n  formData.append('imageUrl',uploadConfig.data.key)\r\n  try {\r\n    console.log('SignUp Action Creator ', formData);\r\n    // delete formData.token;\r\n\r\n    const request = await axios.post(\r\n      'http://localhost:5000/applyMedForm',\r\n      formData\r\n    );\r\n    //for PROD\r\n    // const request = await axios.post(\r\n    //   'https://glacial-wave-31511.herokuapp.com/applyMedForm',\r\n    //   formData\r\n    // );\r\n    cb();\r\n    return {\r\n      type: SuccessfulApplication,\r\n      payload: request.data,\r\n    };\r\n  } catch (e) {\r\n    return {\r\n      type: ErrorApplication,\r\n      payload: 'Oops! Something Went Wrong',\r\n    };\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}