{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/applyForm.js\";\nimport React, { Component } from 'react';\nimport { reduxForm, Field } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, Form, Col, Alert } from 'react-bootstrap';\nimport FieldInputUpload from './uploaderMed';\nimport validator from 'validator';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport Footer from './footer';\n\nclass ApplyForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTextArea = ({\n      input,\n      type,\n      label,\n      controlId,\n      placeholder,\n      required,\n      rows,\n      cols,\n      accept,\n      meta\n    }) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        as: Col,\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({}, input, {\n        as: type,\n        rows: rows,\n        cols: cols,\n        placeholder: placeholder,\n        disabled: this.props.disabled,\n        accept: accept,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      })), this.renderError(meta)));\n    };\n\n    this.renderHelper = ({\n      input,\n      type,\n      label,\n      controlId,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error,\n      className,\n      maxDate\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder //  max={maxDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }\n      })), this.renderError(meta)));\n    };\n\n    this.onSubmit = formValues => {\n      // formValues.token = localStorage.getItem('token');\n      //     console.log(formValues);\n      //     console.log('localStorage ', localStorage.getItem('token'))\n      this.props.onSubmit(formValues);\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, error));\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Address\",\n      type: \"text\",\n      component: this.renderHelper,\n      label: \"Name\",\n      placeholder: \"Name\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"Address\",\n      type: \"text\",\n      component: this.renderHelper,\n      label: \"Surname\",\n      placeholder: \"Surname\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 18\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Address\",\n      type: \"text\",\n      component: this.renderHelper,\n      label: \"Name Of Medication\",\n      placeholder: \"Name Of Medication\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"nearestMedicalFacility\",\n      type: \"text\",\n      component: this.renderHelper,\n      label: \"Nearest Clinic/Hospital\",\n      placeholder: \"Nearest Clinic/Hospital\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"copyOfMedicalHistory\",\n      component: FieldInputUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"briefMedicalHistory\",\n      type: \"textarea\",\n      placeholder: \"Tell us more about your Past and Present Medical History\",\n      label: \"Brief Medical History\",\n      rows: \"8\",\n      cols: \"70\",\n      component: this.renderTextArea,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }), \"              \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"mr-3\",\n      type: \"submit\",\n      disabled: this.props.disabled,\n      variant: this.props.variant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, ' ', this.props.message), /*#__PURE__*/React.createElement(Button, {\n      as: Link,\n      to: this.props.to,\n      type: \"submit\",\n      variant: this.props.variant1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, ' ', this.props.message1)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }))), \"\\\\\");\n  }\n\n}\n\nfunction validate(values) {\n  const error = {};\n\n  if (!values.nearestMedicalFacility) {\n    error.nearestMedicalFacility = 'Field is Required';\n  } else if (values.nearestMedicalFacility) {// if(!validator.isAlpha(values.nearestMedicalFacility)){\n    //     error.nearestMedicalFacility=\"Name Cannot Contain numbers,symbols or special Characters\"\n    // }\n  }\n\n  if (!values.briefMedicalHistory) {\n    error.briefMedicalHistory = 'Field is Required';\n  }\n\n  if (!values.copyOfMedicalHistory) {\n    error.copyOfMedicalHistory = 'Field is Required';\n  }\n\n  if (!values.Address) {\n    error.Address = 'Field is Required';\n  }\n\n  return error;\n}\n\nexport default reduxForm({\n  form: 'applyForm',\n  validate\n})(ApplyForm);","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/applyForm.js"],"names":["React","Component","reduxForm","Field","Link","Container","Button","Form","Col","Alert","FieldInputUpload","validator","bsCustomFileInput","Footer","ApplyForm","renderTextArea","input","type","label","controlId","placeholder","required","rows","cols","accept","meta","props","disabled","renderError","renderHelper","error","className","maxDate","console","log","onSubmit","formValues","componentDidMount","init","touched","render","handleSubmit","bind","variant","message","to","variant1","message1","validate","values","nearestMedicalFacility","briefMedicalHistory","copyOfMedicalHistory","Address","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,KAAvC,QAAoD,iBAApD;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,SAAN,SAAwBb,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAKhCc,cALgC,GAKf,CAAC;AAChBC,MAAAA,KADgB;AAEhBC,MAAAA,IAFgB;AAGhBC,MAAAA,KAHgB;AAIhBC,MAAAA,SAJgB;AAKhBC,MAAAA,WALgB;AAMhBC,MAAAA,QANgB;AAOhBC,MAAAA,IAPgB;AAQhBC,MAAAA,IARgB;AAShBC,MAAAA,MATgB;AAUhBC,MAAAA;AAVgB,KAAD,KAWX;AACJ,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEM,oBAAC,IAAD,CAAM,KAAN;AAAa,QAAA,EAAE,EAAEjB,GAAjB;AAAsB,QAAA,SAAS,EAAEW,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,KAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN,oBACMF,KADN;AAEE,QAAA,EAAE,EAAEC,IAFN;AAGE,QAAA,IAAI,EAAEK,IAHR;AAIE,QAAA,IAAI,EAAEC,IAJR;AAKE,QAAA,WAAW,EAAEH,WALf;AAME,QAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,QANvB;AAOE,QAAA,MAAM,EAAEH,MAPV;AAQE,QAAA,QAAQ,MARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAaG,KAAKI,WAAL,CAAiBH,IAAjB,CAbH,CAFN,CADF;AAqBD,KAtC+B;;AAAA,SAkDhCI,YAlDgC,GAkDjB,CAAC;AACdb,MAAAA,KADc;AAEdC,MAAAA,IAFc;AAGdC,MAAAA,KAHc;AAIdC,MAAAA,SAJc;AAKdC,MAAAA,WALc;AAMdC,MAAAA,QANc;AAOdG,MAAAA,MAPc;AAQdC,MAAAA,IARc;AASdK,MAAAA,KATc;AAUdC,MAAAA,SAVc;AAWdC,MAAAA;AAXc,KAAD,KAYT;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBT,IAArB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAEM,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAEZ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,KAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,QAAA,QAAQ;AADV,SAEMF,KAFN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,WAAW,EAAEG,WAJf,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAUG,KAAKQ,WAAL,CAAiBH,IAAjB,CAVH,CADF,CADF;AAgBD,KAjF+B;;AAAA,SAmFhCU,QAnFgC,GAmFpBC,UAAD,IAAgB;AACzB;AACA;AACA;AAEA,WAAKV,KAAL,CAAWS,QAAX,CAAoBC,UAApB;AACD,KAzF+B;AAAA;;AAChCC,EAAAA,iBAAiB,GAAG;AAClBzB,IAAAA,iBAAiB,CAAC0B,IAAlB;AACD;;AAqCDV,EAAAA,WAAW,CAAC;AAAEE,IAAAA,KAAF;AAASS,IAAAA;AAAT,GAAD,EAAqB;AAC9B,QAAIT,KAAK,IAAIS,OAAb,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBT,KAAzB,CADF,CADF;AAKD;AACF;;AA2CDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKf,KAA9B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,QAAQ,EAAEe,YAAY,CAAC,KAAKN,QAAL,CAAcO,IAAd,CAAmB,IAAnB,CAAD,CADxB;AAEE,MAAA,OAAO,EAAC,qBAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAKE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE,KAAKb,YAHlB;AAIE,MAAA,KAAK,EAAC,MAJR;AAKE,MAAA,WAAW,EAAC,MALd;AAME,MAAA,SAAS,EAAC,UANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASK,oBAAC,KAAD;AACD,MAAA,IAAI,EAAC,SADJ;AAED,MAAA,IAAI,EAAC,MAFJ;AAGD,MAAA,SAAS,EAAE,KAAKA,YAHf;AAID,MAAA,KAAK,EAAC,SAJL;AAKD,MAAA,WAAW,EAAC,SALX;AAMD,MAAA,SAAS,EAAC,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATL,CALF,eAuBA,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACM,MAAA,IAAI,EAAC,SADX;AAEM,MAAA,IAAI,EAAC,MAFX;AAGM,MAAA,SAAS,EAAE,KAAKA,YAHtB;AAIM,MAAA,KAAK,EAAC,oBAJZ;AAKM,MAAA,WAAW,EAAC,oBALlB;AAMM,MAAA,SAAS,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eASA,oBAAC,KAAD;AACM,MAAA,IAAI,EAAC,wBADX;AAEM,MAAA,IAAI,EAAC,MAFX;AAGM,MAAA,SAAS,EAAE,KAAKA,YAHtB;AAIM,MAAA,KAAK,EAAC,yBAJZ;AAKM,MAAA,WAAW,EAAC,yBALlB;AAMM,MAAA,SAAS,EAAC,UANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,CAvBA,eA0CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CA,eA2CE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AAEA,MAAA,IAAI,EAAC,sBAFL;AAE4B,MAAA,SAAS,EAAEnB,gBAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CA3CF,eAkDE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlDF,eAmDE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,KAAD;AACI,MAAA,IAAI,EAAC,qBADT;AAEI,MAAA,IAAI,EAAC,UAFT;AAGI,MAAA,WAAW,EAAC,0DAHhB;AAII,MAAA,KAAK,EAAC,uBAJV;AAKI,MAAA,IAAI,EAAC,GALT;AAMI,MAAA,IAAI,EAAC,IANT;AAOI,MAAA,SAAS,EAAE,KAAKK,cAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,iCAUkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVlB,CAnDF,eA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DF,eAgEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,MADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,KAAKW,KAAL,CAAWC,QAHvB;AAIE,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWiB,OAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,EAOG,KAAKjB,KAAL,CAAWkB,OAPd,CADF,eAUE,oBAAC,MAAD;AACE,MAAA,EAAE,EAAExC,IADN;AAEE,MAAA,EAAE,EAAE,KAAKsB,KAAL,CAAWmB,EAFjB;AAGE,MAAA,IAAI,EAAC,QAHP;AAIE,MAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWoB,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,GANH,EAOG,KAAKpB,KAAL,CAAWqB,QAPd,CAVF,CAhEF,eAqFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArFF,eAsFE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtFF,CADF,CADF,OADF;AA8FD;;AA3L+B;;AA8LlC,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAMnB,KAAK,GAAG,EAAd;;AAEA,MAAI,CAACmB,MAAM,CAACC,sBAAZ,EAAoC;AAClCpB,IAAAA,KAAK,CAACoB,sBAAN,GAA+B,mBAA/B;AACD,GAFD,MAEO,IAAID,MAAM,CAACC,sBAAX,EAAmC,CACxC;AACA;AACA;AACD;;AACD,MAAI,CAACD,MAAM,CAACE,mBAAZ,EAAiC;AAC/BrB,IAAAA,KAAK,CAACqB,mBAAN,GAA4B,mBAA5B;AACD;;AACD,MAAI,CAACF,MAAM,CAACG,oBAAZ,EAAkC;AAChCtB,IAAAA,KAAK,CAACsB,oBAAN,GAA6B,mBAA7B;AACD;;AACD,MAAI,CAACH,MAAM,CAACI,OAAZ,EAAqB;AACnBvB,IAAAA,KAAK,CAACuB,OAAN,GAAgB,mBAAhB;AACD;;AAED,SAAOvB,KAAP;AACD;;AAED,eAAe5B,SAAS,CAAC;AACvBoD,EAAAA,IAAI,EAAE,WADiB;AAEvBN,EAAAA;AAFuB,CAAD,CAAT,CAGZlC,SAHY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Button, Form, Col, Alert } from 'react-bootstrap';\r\nimport FieldInputUpload from './uploaderMed';\r\nimport validator from 'validator';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport Footer from './footer'\r\nclass ApplyForm extends Component {\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n  }\r\n\r\n  renderTextArea = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    placeholder,\r\n    required,\r\n    rows,\r\n    cols,\r\n    accept,\r\n    meta,\r\n  }) => {\r\n    return (\r\n      <div>\r\n        \r\n            <Form.Group  as={Col} controlId={controlId}>\r\n              <Form.Label>{label}</Form.Label>\r\n              <Form.Control\r\n                {...input}\r\n                as={type}\r\n                rows={rows}\r\n                cols={cols}\r\n                placeholder={placeholder}\r\n                disabled={this.props.disabled}\r\n                accept={accept}\r\n                required\r\n              />\r\n\r\n              {this.renderError(meta)}\r\n            </Form.Group>\r\n          \r\n      </div>\r\n    );\r\n  };\r\n\r\n  renderError({ error, touched }) {\r\n    if (error && touched) {\r\n      return (\r\n        <div className=''>\r\n          <Alert variant='danger'>{error}</Alert>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    className,\r\n    maxDate,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            //  max={maxDate}\r\n          />\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    // formValues.token = localStorage.getItem('token');\r\n    //     console.log(formValues);\r\n    //     console.log('localStorage ', localStorage.getItem('token'))\r\n\r\n    this.props.onSubmit(formValues);\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <Container>\r\n          <Form\r\n            onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n            encType='multipart/form-data'\r\n          >\r\n            <br />\r\n            <Form.Row>\r\n              <Field\r\n                name='Address'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Name'\r\n                placeholder='Name'\r\n                className='col-md-6'\r\n              />\r\n                 <Field\r\n                name='Address'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Surname'\r\n                placeholder='Surname'\r\n                className='col-md-6'\r\n              />\r\n            </Form.Row>\r\n          <Form.Row>\r\n          <Field\r\n                name='Address'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Name Of Medication'\r\n                placeholder='Name Of Medication'\r\n                className='col-md-6'\r\n              />\r\n          <Field\r\n                name='nearestMedicalFacility'\r\n                type='text'\r\n                component={this.renderHelper}\r\n                label='Nearest Clinic/Hospital'\r\n                placeholder='Nearest Clinic/Hospital'\r\n                className='col-md-6'\r\n              />\r\n             \r\n          </Form.Row>\r\n          <br />\r\n            <Form.Row>\r\n            <Field \r\n\r\n            name='copyOfMedicalHistory' component={FieldInputUpload} />\r\n\r\n            \r\n            </Form.Row>\r\n            <br />\r\n            <Form.Row>\r\n            <Field\r\n                name='briefMedicalHistory'\r\n                type='textarea'\r\n                placeholder='Tell us more about your Past and Present Medical History'\r\n                label='Brief Medical History'\r\n                rows='8'\r\n                cols='70'\r\n                component={this.renderTextArea}\r\n               \r\n              />              <br />\r\n            </Form.Row>\r\n            <br />\r\n            <div>\r\n              <Button\r\n                className='mr-3'\r\n                type='submit'\r\n                disabled={this.props.disabled}\r\n                variant={this.props.variant}\r\n              >\r\n                {' '}\r\n                {this.props.message}\r\n              </Button>\r\n              <Button\r\n                as={Link}\r\n                to={this.props.to}\r\n                type='submit'\r\n                variant={this.props.variant1}\r\n              >\r\n                {' '}\r\n                {this.props.message1}\r\n              </Button>\r\n            </div>\r\n\r\n            <br />\r\n            <br />\r\n          </Form>\r\n        </Container>\\\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const error = {};\r\n\r\n  if (!values.nearestMedicalFacility) {\r\n    error.nearestMedicalFacility = 'Field is Required';\r\n  } else if (values.nearestMedicalFacility) {\r\n    // if(!validator.isAlpha(values.nearestMedicalFacility)){\r\n    //     error.nearestMedicalFacility=\"Name Cannot Contain numbers,symbols or special Characters\"\r\n    // }\r\n  }\r\n  if (!values.briefMedicalHistory) {\r\n    error.briefMedicalHistory = 'Field is Required';\r\n  }\r\n  if (!values.copyOfMedicalHistory) {\r\n    error.copyOfMedicalHistory = 'Field is Required';\r\n  }\r\n  if (!values.Address) {\r\n    error.Address = 'Field is Required';\r\n  }\r\n\r\n  return error;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'applyForm',\r\n  validate,\r\n})(ApplyForm);\r\n"]},"metadata":{},"sourceType":"module"}