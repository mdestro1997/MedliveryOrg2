{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/DoctorComponentViews/doctorsBio.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport validator from 'validator';\nimport DoctorCertUpload from '../uploadCertOfPractice';\nimport CopyOfIdUploader from './doctorCopyId';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport { doctorSignUpActionCreator } from '../../actions/DoctorActionCreators/doctorSignUpActionCreator';\n\nclass DoctorBiography extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHelperCategory = ({\n      input,\n      type,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error,\n      as,\n      maxDate\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder,\n        as: as //  max={maxDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }\n      }, \"General Physician \"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 1\n        }\n      }, \"Cardiologist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 1\n        }\n      }, \"Neurosurgeon\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 1\n        }\n      }, \"Oncologist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 1\n        }\n      }, \"Orthopaedic Surgeon\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 1\n        }\n      }, \"Neurologist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 1\n        }\n      }, \"Gastroenterologist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 1\n        }\n      }, \"ENT\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 1\n        }\n      }, \"Dentist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 1\n        }\n      }, \"Psychiatrist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 1\n        }\n      }, \"Urologist\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 1\n        }\n      }, \"Gynecologits\"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 1\n        }\n      }, \"Pediatrician\")), this.renderError(meta)));\n    };\n\n    this.renderHelperGender = ({\n      input,\n      type,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      as,\n      error,\n      maxDate\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder,\n        as: as //  max={maxDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, \"Male \"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 1\n        }\n      }, \"Female\")), this.renderError(meta)));\n    };\n\n    this.renderHelper = ({\n      input,\n      type,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error,\n      maxDate\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder //  max={maxDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }\n      })), this.renderError(meta)));\n    };\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }\n      }, error));\n    }\n  }\n\n  onSubmit(formValues) {\n    console.log(formValues);\n    this.props.doctorSignUpActionCreator(formValues, () => {\n      this.props.history.push('/selectGroup');\n    });\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center text-secondary mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }\n    }, \"Doctor's Profile\"), /*#__PURE__*/React.createElement(Form, {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"qualification\",\n      label: \"Qualification\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g MBBS,DNB(Neurology)\",\n      controlId: \"formGroupQualification\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"department\",\n      label: \"Department\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g Neurosurgeon\",\n      controlId: \"formGroupDepartment\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"speciality\",\n      label: \"Speciality\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g Neurosurgery\",\n      controlId: \"formGroupSpeciality\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"locality\",\n      label: \"Locality\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g Gaborone,Botswana\",\n      controlId: \"formGroupLocality\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"consultantIn\",\n      label: \"Consultant In\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g Kalafhi Private Hospital\",\n      controlId: \"formGroupConsultantIn\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"category\",\n      label: \"Category\",\n      component: this.renderHelperCategory,\n      type: \"select\",\n      as: \"select\",\n      required: \"required\",\n      placeholder: \"Category\",\n      controlId: \"formGroupCategory\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"experience\",\n      label: \"Years Of Experience\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"e.g 6 years\",\n      controlId: \"formGroupExperience\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"container col-md-4 mt-5\",\n      type: \"submit\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 13\n      }\n    }, ' ', \"Add\", ' '))));\n  }\n\n}\n\nfunction validate(values) {\n  const error = {};\n\n  if (!values.firstname) {\n    error.firstname = 'Field is Required';\n  } else if (values.firstname) {\n    if (!validator.isAlpha(values.firstname)) {\n      error.firstname = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.middlename) {\n    error.middlename = 'Field is Required';\n  } else if (values.middlename) {\n    if (!validator.isAlpha(values.middlename)) {\n      error.middlename = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.lastname) {\n    error.lastname = 'Field is Required';\n  } else if (values.lastname) {\n    if (!validator.isAlpha(values.lastname)) {\n      error.lastname = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.password) {\n    error.password = 'Field is Required';\n  } else if (values.password) {}\n\n  if (!values.passwordConfirm) {\n    error.passwordConfirm = 'Field is Required';\n  } else if (values.passwordConfirm) {\n    if (!validator.equals(values.passwordConfirm, values.password)) {\n      error.passwordConfirm = 'Passwords do not Match';\n    }\n  }\n\n  if (!values.phoneNumber) {\n    error.phoneNumber = 'Field is Required';\n  }\n\n  if (!values.dateOfBirth) {\n    error.dateOfBirth = 'Field is Required';\n  }\n\n  if (!values.copyOfId) {\n    error.copyOfId = 'Field is Required';\n  }\n\n  if (!values.physicalAddress) {\n    error.physicalAdress = 'Field is Required';\n  }\n\n  if (!values.email) {\n    error.email = 'Field is Required';\n  } else if (values.email) {\n    const validEmail = validator.isEmail(values.email);\n\n    if (!validEmail) {\n      error.email = 'Invalid Email';\n    }\n  } //console.log('Error ', errors)\n\n\n  return error;\n}\n\nexport default reduxForm({\n  form: 'doctorSignUpForm',\n  destroyOnUnmount: true,\n  forceUnregisterOnUnmount: true,\n  validate\n})(connect(null, {\n  doctorSignUpActionCreator\n})(DoctorBiography));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/DoctorComponentViews/doctorsBio.js"],"names":["React","Component","Form","Button","Alert","connect","Field","reduxForm","validator","DoctorCertUpload","CopyOfIdUploader","bsCustomFileInput","doctorSignUpActionCreator","DoctorBiography","renderHelperCategory","input","type","label","controlId","className","placeholder","required","accept","meta","error","as","maxDate","console","log","renderError","renderHelperGender","renderHelper","componentDidMount","init","touched","onSubmit","formValues","props","history","push","render","handleSubmit","bind","validate","values","firstname","isAlpha","middlename","lastname","password","passwordConfirm","equals","phoneNumber","dateOfBirth","copyOfId","physicalAddress","physicalAdress","email","validEmail","isEmail","form","destroyOnUnmount","forceUnregisterOnUnmount"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAsBC,KAAtB,QAAmC,iBAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,SAAP,MAAsB,WAAtB;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,gBAAP,MAA6B,gBAA7B;AACA,OAAOC,iBAAP,MAA8B,sBAA9B;AAEA,SAASC,yBAAT,QAA0C,8DAA1C;;AAEA,MAAMC,eAAN,SAA8BZ,SAA9B,CAAwC;AAAA;AAAA;;AAAA,SAkBtCa,oBAlBsC,GAkBf,CAAC;AACtBC,MAAAA,KADsB;AAEtBC,MAAAA,IAFsB;AAGtBC,MAAAA,KAHsB;AAItBC,MAAAA,SAJsB;AAKtBC,MAAAA,SALsB;AAMtBC,MAAAA,WANsB;AAOtBC,MAAAA,QAPsB;AAQtBC,MAAAA,MARsB;AAStBC,MAAAA,IATsB;AAUtBC,MAAAA,KAVsB;AAWtBC,MAAAA,EAXsB;AAYtBC,MAAAA;AAZsB,KAAD,KAajB;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAED,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,KAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,QAAA,QAAQ;AADV,SAEMF,KAFN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,WAAW,EAAEI,WAJf;AAKE,QAAA,EAAE,EAAEK,EALN,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARL,eAUV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVU,eAWV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAXU,eAYV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAZU,eAaV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAbU,eAcV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAdU,eAeV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAfU,eAgBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAhBU,eAiBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAjBU,eAkBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBU,eAmBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAnBU,eAoBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBApBU,eAqBV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArBU,CAFF,EA0BG,KAAKI,WAAL,CAAiBN,IAAjB,CA1BH,CADF,CADF;AAgCD,KAlEqC;;AAAA,SAsEtCO,kBAtEsC,GAsEjB,CAAC;AACpBf,MAAAA,KADoB;AAEpBC,MAAAA,IAFoB;AAGpBC,MAAAA,KAHoB;AAIpBC,MAAAA,SAJoB;AAKpBC,MAAAA,SALoB;AAMpBC,MAAAA,WANoB;AAOpBC,MAAAA,QAPoB;AAQpBC,MAAAA,MARoB;AASpBC,MAAAA,IAToB;AAUpBE,MAAAA,EAVoB;AAWpBD,MAAAA,KAXoB;AAYpBE,MAAAA;AAZoB,KAAD,KAaf;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAED,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,KAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,QAAA,QAAQ;AADV,SAEMF,KAFN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,WAAW,EAAEI,WAJf;AAKE,QAAA,EAAE,EAAEK,EALN,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,eAUV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVU,CAFF,EAeG,KAAKI,WAAL,CAAiBN,IAAjB,CAfH,CADF,CADF;AAqBD,KA3GqC;;AAAA,SA8GtCQ,YA9GsC,GA8GvB,CAAC;AACdhB,MAAAA,KADc;AAEdC,MAAAA,IAFc;AAGdC,MAAAA,KAHc;AAIdC,MAAAA,SAJc;AAKdC,MAAAA,SALc;AAMdC,MAAAA,WANc;AAOdC,MAAAA,QAPc;AAQdC,MAAAA,MARc;AASdC,MAAAA,IATc;AAUdC,MAAAA,KAVc;AAWdE,MAAAA;AAXc,KAAD,KAYT;AACJC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,IAArB;AAEA,0BACE;AAAK,QAAA,SAAS,EAAEJ,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAED,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaD,KAAb,CADF,eAEE,oBAAC,IAAD,CAAM,OAAN;AACE,QAAA,QAAQ;AADV,SAEMF,KAFN;AAGE,QAAA,IAAI,EAAEC,IAHR;AAIE,QAAA,WAAW,EAAEI,WAJf,CAKE;AALF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAUG,KAAKS,WAAL,CAAiBN,IAAjB,CAVH,CADF,CADF;AAgBD,KA7IqC;AAAA;;AAGtCS,EAAAA,iBAAiB,GAAG;AAClBrB,IAAAA,iBAAiB,CAACsB,IAAlB;AACD;;AAEDJ,EAAAA,WAAW,CAAC;AAAEL,IAAAA,KAAF;AAASU,IAAAA;AAAT,GAAD,EAAqB;AAC9B,QAAIV,KAAK,IAAIU,OAAb,EAAsB;AACpB,0BACE;AAAK,QAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBV,KAAzB,CADF,CADF;AAKD;AACF;;AAgIDW,EAAAA,QAAQ,CAACC,UAAD,EAAa;AACnBT,IAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AAEA,SAAKC,KAAL,CAAWzB,yBAAX,CAAqCwB,UAArC,EAAiD,MAAM;AACrD,WAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,cAAxB;AACD,KAFD;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKJ,KAA9B;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,iCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE,oBAAC,IAAD;AACE,MAAA,OAAO,EAAC,qBADV;AAEE,MAAA,QAAQ,EAAEI,YAAY,CAAC,KAAKN,QAAL,CAAcO,IAAd,CAAmB,IAAnB,CAAD,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,eADP;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,SAAS,EAAE,KAAKX,YAHlB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,WAAW,EAAC,yBANd;AAOE,MAAA,SAAS,EAAC,wBAPZ;AAQE,MAAA,SAAS,EAAC,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAaE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,SAAS,EAAE,KAAKA,YAHlB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,WAAW,EAAC,kBANd;AAOE,MAAA,SAAS,EAAC,qBAPZ;AAQE,MAAA,SAAS,EAAC,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,eAyBE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,SAAS,EAAE,KAAKA,YAHlB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,WAAW,EAAC,kBANd;AAOE,MAAA,SAAS,EAAC,qBAPZ;AAQE,MAAA,SAAS,EAAC,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CAJF,eA0DE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACA,MAAA,IAAI,EAAC,UADL;AAEA,MAAA,KAAK,EAAC,UAFN;AAGA,MAAA,SAAS,EAAE,KAAKA,YAHhB;AAIA,MAAA,IAAI,EAAC,MAJL;AAKA,MAAA,QAAQ,EAAC,UALT;AAMA,MAAA,WAAW,EAAC,uBANZ;AAOA,MAAA,SAAS,EAAC,mBAPV;AAQA,MAAA,SAAS,EAAC,UARV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAcE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,cADP;AAEE,MAAA,KAAK,EAAC,eAFR;AAGE,MAAA,SAAS,EAAE,KAAKA,YAHlB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,WAAW,EAAC,8BANd;AAOE,MAAA,SAAS,EAAC,uBAPZ;AAQE,MAAA,SAAS,EAAC,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,eA2BE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,SAAS,EAAE,KAAKjB,oBAHlB;AAIE,MAAA,IAAI,EAAC,QAJP;AAKE,MAAA,EAAE,EAAC,QALL;AAME,MAAA,QAAQ,EAAC,UANX;AAOE,MAAA,WAAW,EAAC,UAPd;AAQE,MAAA,SAAS,EAAC,mBARZ;AASE,MAAA,SAAS,EAAC,UATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,CA1DF,eAsHE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,YADP;AAEE,MAAA,KAAK,EAAC,qBAFR;AAGE,MAAA,SAAS,EAAE,KAAKiB,YAHlB;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAC,UALX;AAME,MAAA,WAAW,EAAC,aANd;AAOE,MAAA,SAAS,EAAC,qBAPZ;AAQE,MAAA,SAAS,EAAC,UARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtHF,eA+ME,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/MF,eA8OE,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAC,SAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKG,GALH,SAMM,GANN,CADF,CA9OF,CAFF,CADF;AA8PD;;AAzZqC;;AA6ZxC,SAASY,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,QAAMpB,KAAK,GAAG,EAAd;;AAEA,MAAI,CAACoB,MAAM,CAACC,SAAZ,EAAuB;AACrBrB,IAAAA,KAAK,CAACqB,SAAN,GAAkB,mBAAlB;AACD,GAFD,MAEO,IAAID,MAAM,CAACC,SAAX,EAAsB;AAC3B,QAAI,CAACrC,SAAS,CAACsC,OAAV,CAAkBF,MAAM,CAACC,SAAzB,CAAL,EAA0C;AACxCrB,MAAAA,KAAK,CAACqB,SAAN,GACE,2DADF;AAED;AACF;;AACD,MAAI,CAACD,MAAM,CAACG,UAAZ,EAAwB;AACtBvB,IAAAA,KAAK,CAACuB,UAAN,GAAmB,mBAAnB;AACD,GAFD,MAEO,IAAIH,MAAM,CAACG,UAAX,EAAuB;AAC5B,QAAI,CAACvC,SAAS,CAACsC,OAAV,CAAkBF,MAAM,CAACG,UAAzB,CAAL,EAA2C;AACzCvB,MAAAA,KAAK,CAACuB,UAAN,GACE,2DADF;AAED;AACF;;AACD,MAAI,CAACH,MAAM,CAACI,QAAZ,EAAsB;AACpBxB,IAAAA,KAAK,CAACwB,QAAN,GAAiB,mBAAjB;AACD,GAFD,MAEO,IAAIJ,MAAM,CAACI,QAAX,EAAqB;AAC1B,QAAI,CAACxC,SAAS,CAACsC,OAAV,CAAkBF,MAAM,CAACI,QAAzB,CAAL,EAAyC;AACvCxB,MAAAA,KAAK,CAACwB,QAAN,GACE,2DADF;AAED;AACF;;AAED,MAAI,CAACJ,MAAM,CAACK,QAAZ,EAAsB;AACpBzB,IAAAA,KAAK,CAACyB,QAAN,GAAiB,mBAAjB;AACD,GAFD,MAEO,IAAIL,MAAM,CAACK,QAAX,EAAqB,CAC3B;;AACD,MAAI,CAACL,MAAM,CAACM,eAAZ,EAA6B;AAC3B1B,IAAAA,KAAK,CAAC0B,eAAN,GAAwB,mBAAxB;AACD,GAFD,MAEO,IAAIN,MAAM,CAACM,eAAX,EAA4B;AACjC,QAAI,CAAC1C,SAAS,CAAC2C,MAAV,CAAiBP,MAAM,CAACM,eAAxB,EAAyCN,MAAM,CAACK,QAAhD,CAAL,EAAgE;AAC9DzB,MAAAA,KAAK,CAAC0B,eAAN,GAAwB,wBAAxB;AACD;AACF;;AAED,MAAI,CAACN,MAAM,CAACQ,WAAZ,EAAyB;AACvB5B,IAAAA,KAAK,CAAC4B,WAAN,GAAoB,mBAApB;AACD;;AACD,MAAI,CAACR,MAAM,CAACS,WAAZ,EAAyB;AACvB7B,IAAAA,KAAK,CAAC6B,WAAN,GAAoB,mBAApB;AACD;;AACD,MAAI,CAACT,MAAM,CAACU,QAAZ,EAAsB;AACpB9B,IAAAA,KAAK,CAAC8B,QAAN,GAAiB,mBAAjB;AACD;;AACD,MAAI,CAACV,MAAM,CAACW,eAAZ,EAA6B;AAC3B/B,IAAAA,KAAK,CAACgC,cAAN,GAAuB,mBAAvB;AACD;;AACD,MAAI,CAACZ,MAAM,CAACa,KAAZ,EAAmB;AACjBjC,IAAAA,KAAK,CAACiC,KAAN,GAAc,mBAAd;AACD,GAFD,MAEO,IAAIb,MAAM,CAACa,KAAX,EAAkB;AACvB,UAAMC,UAAU,GAAGlD,SAAS,CAACmD,OAAV,CAAkBf,MAAM,CAACa,KAAzB,CAAnB;;AAEA,QAAI,CAACC,UAAL,EAAiB;AACflC,MAAAA,KAAK,CAACiC,KAAN,GAAc,eAAd;AACD;AACF,GA5DuB,CA8DxB;;;AACA,SAAOjC,KAAP;AACD;;AAED,eAAejB,SAAS,CAAC;AACvBqD,EAAAA,IAAI,EAAE,kBADiB;AAEvBC,EAAAA,gBAAgB,EAAE,IAFK;AAGvBC,EAAAA,wBAAwB,EAAE,IAHH;AAIvBnB,EAAAA;AAJuB,CAAD,CAAT,CAKZtC,OAAO,CAAC,IAAD,EAAO;AAAEO,EAAAA;AAAF,CAAP,CAAP,CAA6CC,eAA7C,CALY,CAAf","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport { Form, Button,Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport validator from 'validator'\r\n\r\nimport DoctorCertUpload from '../uploadCertOfPractice'\r\nimport CopyOfIdUploader from './doctorCopyId'\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\n\r\nimport { doctorSignUpActionCreator } from '../../actions/DoctorActionCreators/doctorSignUpActionCreator';\r\n\r\nclass DoctorBiography extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n  }\r\n\r\n  renderError({ error, touched }) {\r\n    if (error && touched) {\r\n      return (\r\n        <div className=''>\r\n          <Alert variant='danger'>{error}</Alert>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  renderHelperCategory = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    as,\r\n    maxDate,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            as={as}\r\n            //  max={maxDate}\r\n          >\r\n               <option>General Physician </option>\r\n\r\n<option>Cardiologist</option>\r\n<option>Neurosurgeon</option>\r\n<option>Oncologist</option>\r\n<option>Orthopaedic Surgeon</option>\r\n<option>Neurologist</option>\r\n<option>Gastroenterologist</option>\r\n<option>ENT</option>\r\n<option>Dentist</option>\r\n<option>Psychiatrist</option>\r\n<option>Urologist</option>\r\n<option>Gynecologits</option>\r\n<option>Pediatrician</option>\r\n          </Form.Control>\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n\r\n  renderHelperGender = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    as,\r\n    error,\r\n    maxDate,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            as={as}\r\n            //  max={maxDate}\r\n          >\r\n            <option>Male </option>\r\n\r\n<option>Female</option>\r\n          </Form.Control>\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    maxDate,\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            //  max={maxDate}\r\n          />\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n\r\n    this.props.doctorSignUpActionCreator(formValues, () => {\r\n      this.props.history.push('/selectGroup');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n\r\n\r\n    return (\r\n      <div className='container mt-5 mb-5'>\r\n        <h3 className='text-center text-secondary mb-5'>Doctor's Profile</h3>\r\n        <Form\r\n          encType='multipart/form-data'\r\n          onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n        >\r\n          <Form.Row>\r\n            <Field\r\n              name='qualification'\r\n              label='Qualification'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g MBBS,DNB(Neurology)'\r\n              controlId='formGroupQualification'\r\n              className='col-md-4'\r\n              \r\n              />\r\n            \r\n            <Field\r\n              name='department'\r\n              label='Department'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g Neurosurgeon'\r\n              controlId='formGroupDepartment'\r\n              className='col-md-4'\r\n              \r\n              />\r\n             \r\n            <Field\r\n              name='speciality'\r\n              label='Speciality'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g Neurosurgery'\r\n              controlId='formGroupSpeciality'\r\n              className='col-md-4'\r\n              \r\n              />\r\n             \r\n            {/* <div className='col-md-6'>\r\n      \r\n               <Form.Group>\r\n                 <Form.Label>Location</Form.Label>\r\n                     <Form.Control as='select' placeholder='Select Hospital'>\r\n                       <option>Select Hospital</option>\r\n      \r\n                       <option>Kalafhi Private Hospital</option>\r\n                       <option>Gaborone Private Hospital</option>\r\n                       <option>Bokamoso Private Hospital</option>\r\n                       <option>Sidilega Private Hospital</option>\r\n                       <option>AO Private Clinic</option>\r\n                     </Form.Control>\r\n                   </Form.Group>\r\n      </div> */}\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n              <Field\r\n              name='locality'\r\n              label='Locality'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g Gaborone,Botswana'\r\n              controlId='formGroupLocality'\r\n              className='col-md-4'\r\n              \r\n              />\r\n              \r\n\r\n            <Field\r\n              name='consultantIn'\r\n              label='Consultant In'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g Kalafhi Private Hospital'\r\n              controlId='formGroupConsultantIn'\r\n              className='col-md-4'\r\n              \r\n              />\r\n              \r\n            {/* <div className='col-md-4'> */}\r\n            <Field\r\n              name='category'\r\n              label='Category'\r\n              component={this.renderHelperCategory}\r\n              type='select'\r\n              as='select'\r\n              required='required'\r\n              placeholder='Category'\r\n              controlId='formGroupCategory'\r\n              className='col-md-4'\r\n              \r\n              />\r\n              {/* <Form.Group>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control as='select' placeholder='Category'>\r\n                  <option>General Physician </option>\r\n\r\n                  <option>Cardiologist</option>\r\n                  <option>Neurosurgeon</option>\r\n                  <option>Oncologist</option>\r\n                  <option>Orthopaedic Surgeon</option>\r\n                  <option>Neurologist</option>\r\n                  <option>Gastroenterologist</option>\r\n                  <option>ENT</option>\r\n                  <option>Dentist</option>\r\n                  <option>Psychiatrist</option>\r\n                  <option>Urologist</option>\r\n                  <option>Gynecologits</option>\r\n                  <option>Pediatrician</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n          </Form.Row>\r\n          <Form.Row>\r\n            {/* <div className='col-md-4'> */}\r\n            <Field\r\n              name='experience'\r\n              label='Years Of Experience'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='e.g 6 years'\r\n              controlId='formGroupExperience'\r\n              className='col-md-4'\r\n              \r\n              />\r\n              {/* <Form.Group>\r\n                <Form.Label>Gender</Form.Label>\r\n                <Form.Control as='select' placeholder='Gender'>\r\n                  <option>Male </option>\r\n\r\n                  <option>Female</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n{/* \r\n            <Field\r\n              name='mobileNumber'\r\n              label='Mobile Number'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='Mobile Number'\r\n              controlId='formGroupMobileNumber'\r\n              className='col-md-4'\r\n              \r\n              />\r\n             \r\n            <Field\r\n              name='physicalAddress'\r\n              label='Physical Address'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              required='required'\r\n              placeholder='Physical Address'\r\n              controlId='formGroupPhysicalAddress'\r\n              className='col-md-4'\r\n              \r\n              /> */}\r\n             \r\n          </Form.Row>\r\n{/* \r\n          <Form.Row>\r\n          <Field\r\n                        name='dateOfBirth'\r\n                        type='date'\r\n                        required='required'\r\n                        label='Date Of Birth'\r\n                        max={this.maxDate}\r\n                        min={this.minDate}\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter DOB'\r\n                        controlId='formGroupDOB'\r\n                        className='col-md-4'\r\n                      />\r\n            <Field\r\n              name='password'\r\n              label='Password'\r\n              component={this.renderHelper}\r\n              type='password'\r\n              required='required'\r\n              placeholder='Password'\r\n              controlId='formGroupPassword'\r\n              className='col-md-4'\r\n              \r\n              />\r\n            \r\n\r\n            <Field\r\n              name='confirmPassword'\r\n              label='Password'\r\n              component={this.renderHelper}\r\n              type='password'\r\n              required='required'\r\n              placeholder='Confirm Password'\r\n              controlId='formGroupConfirmPassword'\r\n              className='col-md-4'\r\n              \r\n              />\r\n            \r\n          </Form.Row> */}\r\n\r\n          <Form.Row>\r\n            {/* <div className='col-md-6'> */}\r\n            {/* <Field\r\n              name='copyOfId'\r\n              component={CopyOfIdUploader}\r\n           \r\n              \r\n              /> */}\r\n              {/* <Form.Group>\r\n                <Form.Label>Copy of ID</Form.Label>\r\n                <Form.Control type='file' placeholder='Copy of ID' />\r\n              </Form.Group>\r\n            </div> */}\r\n\r\n            {/* <div className='col-md-6'> */}\r\n            {/* <Field\r\n              name='copyOfCertificateOfPractice'\r\n              component={DoctorCertUpload}\r\n             \r\n              \r\n              /> */}\r\n              {/* <Form.Group>\r\n                <Form.Label>Copy of Certificate Of Practice</Form.Label>\r\n                <Form.Control\r\n                  type='file'\r\n                  placeholder='Certificate Of Practice'\r\n                />\r\n              </Form.Group>\r\n            </div> */}\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            <Button\r\n              className='container col-md-4 mt-5'\r\n              type='submit'\r\n              variant='success'\r\n            >\r\n              {' '}\r\n              Add{' '}\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nfunction validate(values) {\r\n  const error = {};\r\n\r\n  if (!values.firstname) {\r\n    error.firstname = 'Field is Required';\r\n  } else if (values.firstname) {\r\n    if (!validator.isAlpha(values.firstname)) {\r\n      error.firstname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.middlename) {\r\n    error.middlename = 'Field is Required';\r\n  } else if (values.middlename) {\r\n    if (!validator.isAlpha(values.middlename)) {\r\n      error.middlename =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.lastname) {\r\n    error.lastname = 'Field is Required';\r\n  } else if (values.lastname) {\r\n    if (!validator.isAlpha(values.lastname)) {\r\n      error.lastname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n\r\n  if (!values.password) {\r\n    error.password = 'Field is Required';\r\n  } else if (values.password) {\r\n  }\r\n  if (!values.passwordConfirm) {\r\n    error.passwordConfirm = 'Field is Required';\r\n  } else if (values.passwordConfirm) {\r\n    if (!validator.equals(values.passwordConfirm, values.password)) {\r\n      error.passwordConfirm = 'Passwords do not Match';\r\n    }\r\n  }\r\n\r\n  if (!values.phoneNumber) {\r\n    error.phoneNumber = 'Field is Required';\r\n  }\r\n  if (!values.dateOfBirth) {\r\n    error.dateOfBirth = 'Field is Required';\r\n  }\r\n  if (!values.copyOfId) {\r\n    error.copyOfId = 'Field is Required';\r\n  }\r\n  if (!values.physicalAddress) {\r\n    error.physicalAdress = 'Field is Required';\r\n  }\r\n  if (!values.email) {\r\n    error.email = 'Field is Required';\r\n  } else if (values.email) {\r\n    const validEmail = validator.isEmail(values.email);\r\n\r\n    if (!validEmail) {\r\n      error.email = 'Invalid Email';\r\n    }\r\n  }\r\n\r\n  //console.log('Error ', errors)\r\n  return error;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'doctorSignUpForm',\r\n  destroyOnUnmount: true,\r\n  forceUnregisterOnUnmount: true,\r\n  validate,\r\n})(connect(null, { doctorSignUpActionCreator })(DoctorBiography));\r\n"]},"metadata":{},"sourceType":"module"}