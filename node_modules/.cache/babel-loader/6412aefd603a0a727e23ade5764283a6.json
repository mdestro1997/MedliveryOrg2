{"ast":null,"code":"import axios from 'axios';\nimport { PatientAppointmentsSuccess, PatientAppointmentsError } from './typeAuth';\nexport async function getPatientAppointmentsActionCreator(values, cb) {\n  try {\n    axios.defaults.headers = {\n      'Authorization': `Bearer ${values.token}`\n    };\n    console.log('Patient Details', values);\n    const request = await axios.get(`http://localhost:5000/getPatientBookingsAppointments/`, values); //     const request = await axios.post('https://glacial-wave-31511.herokuapp.com/user/login',values)\n\n    console.log('token is', request.data.token);\n    console.log('tokencc is', request.data);\n    localStorage.setItem('token', request.data.token);\n    cb(); //     localStorage.setItem('token',request.data)\n\n    return {\n      type: PatientAppointmentsSuccess,\n      payload: request.data\n    };\n  } catch (e) {\n    return {\n      type: PatientAppointmentsError,\n      payload: 'Unsuccessful Appointments Retrival'\n    };\n  }\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/getPatientAppointmentsActionCreator.js"],"names":["axios","PatientAppointmentsSuccess","PatientAppointmentsError","getPatientAppointmentsActionCreator","values","cb","defaults","headers","token","console","log","request","get","data","localStorage","setItem","type","payload","e"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,0BAAR,EAAmCC,wBAAnC,QAAkE,YAAlE;AAGA,OAAQ,eAAeC,mCAAf,CAAmDC,MAAnD,EAA0DC,EAA1D,EAA6D;AAEhE,MAAG;AAEAL,IAAAA,KAAK,CAACM,QAAN,CAAeC,OAAf,GAAuB;AAEnB,uBAAiB,UAASH,MAAM,CAACI,KAAM;AAFpB,KAAvB;AAIJC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,MAA/B;AAGA,UAAMO,OAAO,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,uDAAX,EAAkER,MAAlE,CAAtB,CATI,CAWR;;AACIK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,OAAO,CAACE,IAAR,CAAaL,KAArC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,OAAO,CAACE,IAAlC;AAECC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BJ,OAAO,CAACE,IAAR,CAAaL,KAA1C;AACDH,IAAAA,EAAE,GAhBE,CAiBR;;AAEG,WAAM;AAEDW,MAAAA,IAAI,EAACf,0BAFJ;AAGDgB,MAAAA,OAAO,EAACN,OAAO,CAACE;AAHf,KAAN;AAOF,GA1BI,CA0BJ,OAAMK,CAAN,EAAQ;AAIH,WAAM;AACCF,MAAAA,IAAI,EAACd,wBADN;AAECe,MAAAA,OAAO,EAAE;AAFV,KAAN;AAIL;AAEA","sourcesContent":["import axios from 'axios'\nimport {PatientAppointmentsSuccess,PatientAppointmentsError} from './typeAuth'\n\n\nexport  async function getPatientAppointmentsActionCreator(values,cb){\n  \n     try{\n\n        axios.defaults.headers={\n\n            'Authorization':`Bearer ${values.token}`\n        }        \n    console.log('Patient Details', values)\n\n\n    const request = await axios.get(`http://localhost:5000/getPatientBookingsAppointments/`,values)\n\n//     const request = await axios.post('https://glacial-wave-31511.herokuapp.com/user/login',values)\n    console.log('token is', request.data.token)\n    console.log('tokencc is', request.data)\n\n     localStorage.setItem('token',request.data.token)\n    cb();\n//     localStorage.setItem('token',request.data)\n\n   return{  \n\n        type:PatientAppointmentsSuccess,\n        payload:request.data\n   }\n   \n\n}catch(e){\n     \n\n\n      return{\n             type:PatientAppointmentsError,\n             payload: 'Unsuccessful Appointments Retrival'\n      }\n}\n\n}"]},"metadata":{},"sourceType":"module"}