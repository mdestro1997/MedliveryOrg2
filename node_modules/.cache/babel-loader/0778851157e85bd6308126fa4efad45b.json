{"ast":null,"code":"import axios from 'axios';\nimport { GetAllDoctors, GetAllDoctorsError } from './typeAuth';\nexport async function getAllDoctorsActionCreator(values) {\n  try {\n    console.log('Values Submitted', values);\n    const request = await axios.get('https://localhost:5000/getAllDoctors', values); // const request = await axios.get(\n    //   'https://glacial-wave-31511.herokuapp.com/getAllDoctors',\n    //   values\n    // );\n\n    console.log('token is', request.data); //  localStorage.setItem('token',request.data)\n    // cb();\n    //     localStorage.setItem('token',request.data)\n\n    return {\n      type: GetAllDoctors,\n      payload: request.data\n    };\n  } catch (e) {//   return{\n    //          type:AuthError,\n    //          payload: 'Unsuccessful Login'\n    //   }\n  }\n}\nexport async function load(values) {\n  console.log('token is', values);\n  return {\n    type: GetAllDoctors,\n    payload: values\n  };\n}","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/actions/getAllDoctors.js"],"names":["axios","GetAllDoctors","GetAllDoctorsError","getAllDoctorsActionCreator","values","console","log","request","get","data","type","payload","e","load"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,YAAlD;AAEA,OAAO,eAAeC,0BAAf,CAA0CC,MAA1C,EAAkD;AACvD,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,MAAhC;AAEA,UAAMG,OAAO,GAAG,MAAMP,KAAK,CAACQ,GAAN,CACpB,sCADoB,EAEpBJ,MAFoB,CAAtB,CAHE,CAQF;AACA;AACA;AACA;;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,OAAO,CAACE,IAAhC,EAZE,CAaF;AACA;AACA;;AAEA,WAAO;AACLC,MAAAA,IAAI,EAAET,aADD;AAELU,MAAAA,OAAO,EAAEJ,OAAO,CAACE;AAFZ,KAAP;AAID,GArBD,CAqBE,OAAOG,CAAP,EAAU,CACV;AACA;AACA;AACA;AACD;AACF;AAGD,OAAO,eAAeC,IAAf,CAAoBT,MAApB,EAA2B;AAC9BC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAxB;AAEA,SAAO;AACHM,IAAAA,IAAI,EAAET,aADH;AAEHU,IAAAA,OAAO,EAACP;AAFL,GAAP;AAIH","sourcesContent":["import axios from 'axios';\r\nimport { GetAllDoctors, GetAllDoctorsError } from './typeAuth';\r\n\r\nexport async function getAllDoctorsActionCreator(values) {\r\n  try {\r\n    console.log('Values Submitted', values);\r\n\r\n    const request = await axios.get(\r\n      'https://localhost:5000/getAllDoctors',\r\n      values\r\n    );\r\n\r\n    // const request = await axios.get(\r\n    //   'https://glacial-wave-31511.herokuapp.com/getAllDoctors',\r\n    //   values\r\n    // );\r\n    console.log('token is', request.data);\r\n    //  localStorage.setItem('token',request.data)\r\n    // cb();\r\n    //     localStorage.setItem('token',request.data)\r\n\r\n    return {\r\n      type: GetAllDoctors,\r\n      payload: request.data,\r\n    };\r\n  } catch (e) {\r\n    //   return{\r\n    //          type:AuthError,\r\n    //          payload: 'Unsuccessful Login'\r\n    //   }\r\n  }\r\n}\r\n    \r\n\r\nexport async function load(values){\r\n    console.log('token is', values);\r\n\r\n    return {\r\n        type: GetAllDoctors, \r\n        payload:values\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}