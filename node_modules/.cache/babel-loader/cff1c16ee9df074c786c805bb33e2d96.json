{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/searchAndUpdateExistingUser.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { Form, Col, Button, Container, Alert } from 'react-bootstrap';\nimport AdminUpdateRoles from './adminUpdateRoles';\nimport validator from 'validator';\nimport { searchAndUpdateActionCreator } from '../actions/PatientActionCreators/searchAndUpdateActionCreator'; //const validator = require('validator');\n\nclass SearchAndUpdate extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHelper = ({\n      input,\n      type,\n      label,\n      controlId,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \" container col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      })), this.renderError(meta)));\n    };\n  }\n\n  onSubmit(values) {\n    values.token = localStorage.getItem('token');\n    console.log('values ', values);\n    this.props.searchAndUpdateActionCreator(values);\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, error));\n    }\n  }\n\n  renderSearch() {\n    console.log('renderSearch', this.props.foundSearch);\n\n    if (this.props.foundSearch) {\n      return /*#__PURE__*/React.createElement(AdminUpdateRoles, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    } else {// return (\n      //     <div className=\"\" >\n      //         <Alert variant=\"danger\">User with that <strong>email</strong> does not exist</Alert>\n      //     </div>\n      // )\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5  col-md-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"container text-center text-dark display-4 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 14\n      }\n    }, \"Search & Update \"), /*#__PURE__*/React.createElement(Form, {\n      className: \" \",\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email/Phone Number\",\n      controlId: \"formGridEmail\",\n      placeholder: \"Email or Phone Number\",\n      component: this.renderHelper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 22\n      }\n    }, this.props.errorMessage)), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"container col-md-4\",\n      type: \"submit\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 1\n      }\n    }, \" Search \")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 1\n      }\n    })), this.renderSearch())))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    errorMessage: state.authReducer.errorMessage,\n    foundSearch: state.foundSearchToUpdate.foundSearch\n  };\n}\n\nconst validate = values => {\n  const error = {}; // const validEmail = validator.isEmail(values.email);\n  //console.log('hkahlajhdhfiufa valid',validEmail)\n\n  if (!values.email) {\n    error.email = \"Field is Required\";\n  } else if (values.email) {\n    const validEmail = validator.isEmail(values.email);\n\n    if (!validEmail) {\n      error.email = \"Invalid Email\";\n    }\n  }\n\n  if (!values.password) {\n    error.password = \"Please Enter password\";\n  }\n\n  return error;\n};\n\nexport default reduxForm({\n  form: 'SearchAndUpdateForm',\n  validate\n})(connect(mapStateToProps, {\n  searchAndUpdateActionCreator\n})(SearchAndUpdate));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/searchAndUpdateExistingUser.js"],"names":["React","Component","Field","reduxForm","connect","Form","Col","Button","Container","Alert","AdminUpdateRoles","validator","searchAndUpdateActionCreator","SearchAndUpdate","renderHelper","input","type","label","controlId","placeholder","required","accept","meta","error","console","log","renderError","onSubmit","values","token","localStorage","getItem","props","touched","renderSearch","foundSearch","render","handleSubmit","bind","errorMessage","mapStateToProps","state","authReducer","foundSearchToUpdate","validate","email","validEmail","isEmail","password","form"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\n\r\nimport React,{Component} from 'react'\r\n\r\nimport {Field,reduxForm} from 'redux-form'\r\nimport {connect} from 'react-redux'\r\nimport {Form,Col,Button,Container,Alert} from 'react-bootstrap'\r\nimport AdminUpdateRoles from './adminUpdateRoles'\r\n\r\n import validator from 'validator'\r\n\r\nimport {searchAndUpdateActionCreator} from '../actions/PatientActionCreators/searchAndUpdateActionCreator'\r\n//const validator = require('validator');\r\n\r\nclass SearchAndUpdate extends Component{\r\n\r\n\r\n\r\n\r\n\r\n\r\n    onSubmit(values){\r\n        values.token = localStorage.getItem('token');\r\n        console.log('values ', values)\r\n\r\n      this.props.searchAndUpdateActionCreator(values)\r\n\r\n    }  \r\n\r\nrenderError({error,touched}){\r\n\r\n    if(error && touched){\r\n        return (\r\n            <div className=\"\" >\r\n                <Alert variant=\"danger\">{error}</Alert>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nrenderSearch(){\r\n    console.log('renderSearch',this.props.foundSearch )\r\n    if(this.props.foundSearch){\r\n        return(\r\n            <AdminUpdateRoles />\r\n        )\r\n    }else{\r\n        // return (\r\n        //     <div className=\"\" >\r\n        //         <Alert variant=\"danger\">User with that <strong>email</strong> does not exist</Alert>\r\n        //     </div>\r\n        // )\r\n    }\r\n}\r\n\r\n    renderHelper = ({input,type,label,controlId,placeholder,required,accept,meta,error}) => {\r\n   \r\n        console.log('meta ',meta)\r\n         \r\n\r\n        return(\r\n    \r\n       \r\n    \r\n    <div className=' container col-md-4'>\r\n            <Form.Group  controlId={controlId}>\r\n            <Form.Label>{label}</Form.Label>\r\n            <Form.Control \r\n           required\r\n           {...input}\r\n            type={type}\r\n             placeholder={placeholder}  />\r\n             {this.renderError(meta)}\r\n          </Form.Group>\r\n          \r\n          \r\n   \r\n          </div>\r\n   \r\n\r\n    \r\n  \r\n    \r\n\r\n  \r\n            \r\n        )\r\n    \r\n    }\r\n    \r\n\r\n\r\n    render(){\r\n\r\n        const {handleSubmit} = this.props;\r\n\r\n        return(\r\n\r\n            <div>\r\n\r\n            <div className=''>\r\n                <div className=''>\r\n                    <div className=''>\r\n         \r\n                \r\n                {/* <br />\r\n                <br /> */}\r\n            <div className='container mt-5  col-md-8'>\r\n  \r\n{/* handleSubmit(this.onFormSubmit.bind(this)) */}\r\n             {/* <form  > */}\r\n             <h3 className=\"container text-center text-dark display-4 mb-5\">Search &amp; Update </h3>\r\n\r\n\r\n\r\n\r\n      <Form className=' ' onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n\r\n     <div className='row'>\r\n\r\n             </div>  \r\n              \r\n              <Form.Row>\r\n              <Field\r\n                 name=\"email\"\r\n                 type=\"email\"\r\n                 label=\"Email/Phone Number\"\r\n                 controlId=\"formGridEmail\"\r\n                 placeholder=\"Email or Phone Number\"\r\n                 component={this.renderHelper}\r\n                 />\r\n\r\n                </Form.Row>\r\n\r\n               \r\n\r\n                <div><Alert >{this.props.errorMessage}</Alert></div>\r\n\r\n<Form.Row>\r\n<Button className='container col-md-4' type =\"submit\" variant=\"success\"> Search </Button> \r\n</Form.Row>\r\n<br />  \r\n</Form>\r\n{this.renderSearch()}\r\n{/* <AdminUpdateRoles /> */}\r\n            </div>\r\n            </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n  \r\nfunction mapStateToProps(state){\r\n    return{\r\n            errorMessage:state.authReducer.errorMessage,\r\n            foundSearch:state.foundSearchToUpdate.foundSearch\r\n    }\r\n}\r\n\r\n\r\nconst validate = (values) =>{\r\n\r\n    const error = {};\r\n\r\n// const validEmail = validator.isEmail(values.email);\r\n//console.log('hkahlajhdhfiufa valid',validEmail)\r\n\r\n    if(!values.email ){\r\n       error.email = \"Field is Required\"\r\n    }else if (values.email){\r\n    const validEmail = validator.isEmail(values.email);\r\n\r\n         if(!validEmail){\r\n             error.email =\"Invalid Email\"\r\n         }\r\n}   \r\n    \r\n   \r\n    if(!values.password){\r\n        error.password=\"Please Enter password\"\r\n    }\r\n\r\n    return error;\r\n\r\n}\r\n\r\nexport default reduxForm({\r\n\r\n    form:'SearchAndUpdateForm',\r\n    validate\r\n})(connect(mapStateToProps,{searchAndUpdateActionCreator})(SearchAndUpdate))"]},"metadata":{},"sourceType":"module"}