{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Development/Medlivery/MedliveryMasterUpdated-main/src/Components/onlineConsultation.js\";\nimport React, { Component } from 'react';\nimport { Card, Image, Figure, Jumbotron } from 'react-bootstrap';\nimport Abi from '../img/Abi.jpg';\nimport Raphael from '../img/destro.jpg';\nimport Pitso from '../img/mmopiemang.jpg';\nimport io from 'socket.io-client';\n\nclass OnlineConsultation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendToPeer = (messageType, payload) => {\n      this.socket.emit(messageType, {\n        socketID: this.socket.id,\n        payload\n      });\n    };\n\n    this.createOffer = () => {\n      console.log('Offer');\n      this.pc.createOffer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        // console.log(JSON.stringify(sdp))\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp);\n      });\n    };\n\n    this.setRemoteDescription = () => {\n      console.log('setting remote desc');\n      const desc = JSON.parse(this.textref.value);\n      this.pc.setRemoteDescription(new RTCSessionDescription(desc));\n    };\n\n    this.createAnswer = () => {\n      console.log('Answer');\n      this.pc.createAnswer({\n        offerToReceiveVideo: 1\n      }).then(sdp => {\n        this.pc.setLocalDescription(sdp);\n        this.sendToPeer('offerOrAnswer', sdp); // console.log(JSON.stringify(sdp))\n      });\n    };\n\n    this.addCandidate = () => {\n      // const candidate = JSON.parse(this.textref.value)\n      // console.log('Adding Candidate:', candidate)\n      // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\n      //retrieve and parse the Candidate copied from the remote peer\n      console.log('adding candidates');\n      console.log(this.candidates);\n      this.candidates.forEach(candidate => {\n        console.log(JSON.stringify(candidate)); //add the candidate to the peer connection\n\n        this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n      });\n    };\n\n    this.localVideoref = React.createRef();\n    this.remoteVideoref = React.createRef();\n    this.socket = null;\n    this.candidates = [];\n  }\n\n  componentDidMount() {\n    this.socket = io('/webrtcPeerDestro', {\n      path: '/webrtc',\n      query: {}\n    });\n    this.socket.on('connection-success', success => {\n      console.log(success);\n    });\n    this.socket.on('offerOrAnswer', sdp => {\n      this.textref.value = JSON.stringify(sdp);\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\n    });\n    this.socket.on('candidate', candidate => {\n      // this.textref.value = JSON.stringify(sdp)\n      // console.log('socket candidate ', candidate)\n      // this.candidates = [...this.candidates, candidate];\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\n    }); // const pc_config = null;\n\n    const pc_config = {\n      // iceServers: [\n      //   // {\n      //   //   urls: 'stun:[STUN_IP]:[PORT]',\n      //   //   'credentials': '[YOR CREDENTIALS]',\n      //   //   'username': '[USERNAME]'\n      //   // },\n      //   {\n      //     url: 'stun:stun.l.google.com:19302',\n      //   },\n      //   {\n      //     url: 'turn:numb.viagenie.ca',\n      //     username: 'mathubaraphael@gmail.com',\n      //     credential: 'B@k@ng_0397',\n      //   },\n      // ],\n      iceServers: [{\n        urls: ['stun:us-turn10.xirsys.com']\n      }, {\n        username: 'FqA4SeW0UjpOu25PEe06lN6NvAbsrejriEP-w0sJA88PlH1P7gAbTHa6vEYH-n2DAAAAAF-VhHNSYXBo',\n        credential: '1ebe9d58-16ca-11eb-83b5-0242ac140004',\n        urls: ['turn:us-turn10.xirsys.com:80?transport=udp', 'turn:us-turn10.xirsys.com:3478?transport=udp', 'turn:us-turn10.xirsys.com:80?transport=tcp', 'turn:us-turn10.xirsys.com:3478?transport=tcp', 'turns:us-turn10.xirsys.com:443?transport=tcp', 'turns:us-turn10.xirsys.com:5349?transport=tcp']\n      }]\n    };\n    this.pc = new RTCPeerConnection(pc_config);\n\n    this.pc.onicecandidate = e => {\n      if (e.candidate) {\n        console.log('oniceCandidate ', e.candidate); // console.log(JSON.stringify(e.candidate))\n        // const adCandidate = JSON.stringify(e.candidate)\n        // this.candidates = [...this.candidates, e.candidate];\n\n        this.sendToPeer('candidate,', e.candidate);\n      }\n    };\n\n    this.pc.oniceconnectionstatechange = e => {\n      console.log(e);\n    };\n\n    this.pc.ontrack = e => {\n      this.remoteVideoref.current.srcObject = e.streams[0];\n    };\n\n    var constraints = {\n      audio: true,\n      video: {\n        width: 1280,\n        height: 720\n      }\n    };\n\n    const success = stream => {\n      window.localStream = stream;\n      this.localVideoref.current.srcObject = stream;\n      this.pc.addStream(stream);\n    };\n\n    const failure = e => {\n      console.log('getUSERMEDIA Error: ', e);\n    };\n\n    navigator.mediaDevices.getUserMedia(constraints).then(success).catch(failure); // var constraints = { audio: true, video: { width: 1280, height: 720 } };\n    // navigator.mediaDevices.getUserMedia(constraints)\n    // .then(function(mediaStream) {\n    //   var video = document.querySelector('video');\n    //   video.srcObject = mediaStream;\n    //   video.onloadedmetadata = function(e) {\n    //     video.play();\n    //   };\n    // })\n    // .catch(function(err) { console.log(err.name + \": \" + err.message); }); // always check for errors at the end.\n    // Prefer camera resolution nearest to 1280x720.\n    // always check for errors at the end.\n  } // async function getMedia(constraints) {\n  //   let stream = null;\n  //   try {\n  //     stream = await navigator.mediaDevices.getUserMedia(constraints);\n  //     /* use the stream */\n  //   } catch(err) {\n  //     /* handle the error */\n  //   }\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 340,\n        height: 340,\n        background: 'black'\n      },\n      className: \"mt-5 mr-5 ml-5\",\n      ref: this.localVideoref,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"video\", {\n      style: {\n        width: 340,\n        height: 340,\n        background: 'black'\n      },\n      ref: this.remoteVideoref,\n      autoPlay: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 mr-5 ml-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createOffer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }\n    }, \"Offer\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.createAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, \"Answer\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: ref => {\n        this.textref = ref;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default OnlineConsultation;","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Development/Medlivery/MedliveryMasterUpdated-main/src/Components/onlineConsultation.js"],"names":["React","Component","Card","Image","Figure","Jumbotron","Abi","Raphael","Pitso","io","OnlineConsultation","constructor","props","sendToPeer","messageType","payload","socket","emit","socketID","id","createOffer","console","log","pc","offerToReceiveVideo","then","sdp","setLocalDescription","setRemoteDescription","desc","JSON","parse","textref","value","RTCSessionDescription","createAnswer","addCandidate","candidates","forEach","candidate","stringify","addIceCandidate","RTCIceCandidate","localVideoref","createRef","remoteVideoref","componentDidMount","path","query","on","success","pc_config","iceServers","urls","username","credential","RTCPeerConnection","onicecandidate","e","oniceconnectionstatechange","ontrack","current","srcObject","streams","constraints","audio","video","width","height","stream","window","localStream","addStream","failure","navigator","mediaDevices","getUserMedia","catch","render","background","ref"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Card, Image, Figure, Jumbotron } from 'react-bootstrap';\r\nimport Abi from '../img/Abi.jpg';\r\nimport Raphael from '../img/destro.jpg';\r\nimport Pitso from '../img/mmopiemang.jpg';\r\nimport io from 'socket.io-client';\r\n\r\nclass OnlineConsultation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.localVideoref = React.createRef();\r\n    this.remoteVideoref = React.createRef();\r\n    this.socket = null;\r\n    this.candidates = [];\r\n  }\r\n       \r\n  componentDidMount() {\r\n    this.socket = io('/webrtcPeerDestro', {\r\n      path: '/webrtc',\r\n      query: {},\r\n    });\r\n\r\n    this.socket.on('connection-success', (success) => {\r\n      console.log(success);\r\n    });\r\n\r\n    this.socket.on('offerOrAnswer', (sdp) => {\r\n      this.textref.value = JSON.stringify(sdp);\r\n\r\n      this.pc.setRemoteDescription(new RTCSessionDescription(sdp));\r\n    });\r\n\r\n    this.socket.on('candidate', (candidate) => {\r\n      // this.textref.value = JSON.stringify(sdp)\r\n      // console.log('socket candidate ', candidate)\r\n      // this.candidates = [...this.candidates, candidate];\r\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n\r\n    // const pc_config = null;\r\n\r\n    const pc_config = {\r\n      // iceServers: [\r\n      //   // {\r\n      //   //   urls: 'stun:[STUN_IP]:[PORT]',\r\n      //   //   'credentials': '[YOR CREDENTIALS]',\r\n      //   //   'username': '[USERNAME]'\r\n      //   // },\r\n      //   {\r\n      //     url: 'stun:stun.l.google.com:19302',\r\n      //   },\r\n      //   {\r\n      //     url: 'turn:numb.viagenie.ca',\r\n      //     username: 'mathubaraphael@gmail.com',\r\n      //     credential: 'B@k@ng_0397',\r\n      //   },\r\n      // ],\r\n      iceServers: [\r\n        { urls: ['stun:us-turn10.xirsys.com'] },\r\n        {\r\n          username:\r\n            'FqA4SeW0UjpOu25PEe06lN6NvAbsrejriEP-w0sJA88PlH1P7gAbTHa6vEYH-n2DAAAAAF-VhHNSYXBo',\r\n          credential: '1ebe9d58-16ca-11eb-83b5-0242ac140004',\r\n          urls: [\r\n            'turn:us-turn10.xirsys.com:80?transport=udp',\r\n            'turn:us-turn10.xirsys.com:3478?transport=udp',\r\n            'turn:us-turn10.xirsys.com:80?transport=tcp',\r\n            'turn:us-turn10.xirsys.com:3478?transport=tcp',\r\n            'turns:us-turn10.xirsys.com:443?transport=tcp',\r\n            'turns:us-turn10.xirsys.com:5349?transport=tcp',\r\n          ],\r\n        },\r\n      ],\r\n    };\r\n\r\n    this.pc = new RTCPeerConnection(pc_config);\r\n\r\n    this.pc.onicecandidate = (e) => {\r\n      if (e.candidate) {\r\n        console.log('oniceCandidate ', e.candidate);\r\n\r\n        // console.log(JSON.stringify(e.candidate))\r\n        // const adCandidate = JSON.stringify(e.candidate)\r\n        // this.candidates = [...this.candidates, e.candidate];\r\n\r\n        this.sendToPeer('candidate,', e.candidate);\r\n      }\r\n    };\r\n\r\n    this.pc.oniceconnectionstatechange = (e) => {\r\n      console.log(e);\r\n    };\r\n\r\n    this.pc.ontrack = (e) => {\r\n      this.remoteVideoref.current.srcObject = e.streams[0];\r\n    };\r\n\r\n    var constraints = { audio: true, video: { width: 1280, height: 720 } };\r\n\r\n    const success = (stream) => {\r\n      window.localStream = stream;\r\n      this.localVideoref.current.srcObject = stream;\r\n      this.pc.addStream(stream);\r\n    };  \r\n    const failure = (e) => {\r\n      console.log('getUSERMEDIA Error: ', e);\r\n    }; \r\n\r\n    navigator.mediaDevices\r\n      .getUserMedia(constraints)\r\n      .then(success)\r\n      .catch(failure);\r\n\r\n    // var constraints = { audio: true, video: { width: 1280, height: 720 } };\r\n    // navigator.mediaDevices.getUserMedia(constraints)\r\n    // .then(function(mediaStream) {\r\n    //   var video = document.querySelector('video');\r\n    //   video.srcObject = mediaStream;\r\n    //   video.onloadedmetadata = function(e) {\r\n    //     video.play();\r\n    //   };\r\n    // })\r\n    // .catch(function(err) { console.log(err.name + \": \" + err.message); }); // always check for errors at the end.\r\n    // Prefer camera resolution nearest to 1280x720.\r\n    // always check for errors at the end.\r\n  }\r\n\r\n  // async function getMedia(constraints) {\r\n  //   let stream = null;\r\n\r\n  //   try {\r\n  //     stream = await navigator.mediaDevices.getUserMedia(constraints);\r\n  //     /* use the stream */\r\n  //   } catch(err) {\r\n  //     /* handle the error */\r\n  //   }\r\n  // }\r\n\r\n  sendToPeer = (messageType, payload) => {\r\n    this.socket.emit(messageType, {\r\n      socketID: this.socket.id,\r\n      payload,\r\n    });\r\n  };\r\n\r\n  createOffer = () => {\r\n    console.log('Offer');\r\n    this.pc.createOffer({ offerToReceiveVideo: 1 }).then((sdp) => {\r\n      // console.log(JSON.stringify(sdp))\r\n      this.pc.setLocalDescription(sdp);\r\n      this.sendToPeer('offerOrAnswer', sdp);\r\n    });\r\n  };\r\n\r\n  setRemoteDescription = () => {\r\n    console.log('setting remote desc');\r\n    const desc = JSON.parse(this.textref.value);\r\n    this.pc.setRemoteDescription(new RTCSessionDescription(desc));\r\n  };\r\n\r\n  createAnswer = () => {\r\n    console.log('Answer');\r\n    this.pc.createAnswer({ offerToReceiveVideo: 1 }).then((sdp) => {\r\n      this.pc.setLocalDescription(sdp);\r\n\r\n      this.sendToPeer('offerOrAnswer', sdp);\r\n\r\n      // console.log(JSON.stringify(sdp))\r\n    });\r\n  };\r\n\r\n  addCandidate = () => {\r\n    // const candidate = JSON.parse(this.textref.value)\r\n    // console.log('Adding Candidate:', candidate)\r\n    // this.pc.addIceCandidate(new RTCIceCandidate(candidate))\r\n\r\n    //retrieve and parse the Candidate copied from the remote peer\r\n    console.log('adding candidates');\r\n    console.log(this.candidates);\r\n\r\n    this.candidates.forEach((candidate) => {\r\n      console.log(JSON.stringify(candidate));\r\n      //add the candidate to the peer connection\r\n      this.pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <video\r\n          style={{ width: 340, height: 340, background: 'black' }}\r\n          className='mt-5 mr-5 ml-5'\r\n          ref={this.localVideoref}\r\n          autoPlay\r\n        ></video>\r\n\r\n        <video\r\n          style={{ width: 340, height: 340, background: 'black' }}\r\n          ref={this.remoteVideoref}\r\n          autoPlay\r\n        ></video>\r\n\r\n        <div className='mt-5 mr-5 ml-5'>\r\n          <button onClick={this.createOffer}>Offer</button>\r\n          <button onClick={this.createAnswer}>Answer</button>\r\n          <br />\r\n          <textarea\r\n            ref={(ref) => {\r\n              this.textref = ref;\r\n            }}\r\n          />\r\n          {/* <br />\r\n          <button onClick={this.setRemoteDescription}>Set Remote Desc</button>\r\n          <button onClick={this.addCandidate}>Add Candidate</button> */}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OnlineConsultation;\r\n"]},"metadata":{},"sourceType":"module"}