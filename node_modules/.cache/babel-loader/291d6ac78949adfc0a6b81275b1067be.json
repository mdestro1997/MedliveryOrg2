{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/bookAppointment.js\";\nimport React, { Component } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm, formValueSelector } from 'redux-form';\nimport { load } from '../actions/getAllDoctors';\nimport { bookingsActionCreator } from '../actions/bookingsActionCreator';\nimport _ from 'lodash';\nconst data = {\n  // used to populate \"account\" reducer when \"Load\" is clicked\n  firstName: 'Jane',\n  email: 'mathubar@stanbic.com'\n};\nvar min = '';\n\nclass BookAppointment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderHelperGender = ({\n      input,\n      type,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      as,\n      error,\n      maxDate,\n      optionOne,\n      optionTwo,\n      disabled,\n      hidden\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        hidden: hidden,\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        disabled: disabled,\n        type: type,\n        placeholder: placeholder,\n        as: as //  max={maxDate}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }\n      }, optionOne, \" \"), /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 1\n        }\n      }, optionTwo)), this.renderError(meta)));\n    };\n\n    this.renderHelper = ({\n      input,\n      type,\n      disabled,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error,\n      min,\n      value\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder,\n        disabled: disabled,\n        min: min,\n        value: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }))));\n    };\n  }\n\n  componentDidMount() {\n    var anotherHolding = JSON.stringify(this.props.initialValues); // console.log('holding' + holding)\n\n    console.log('anotherHolding' + anotherHolding); // console.log('holding' + this.props.dataFill)\n\n    console.log('anotherHolding' + this.props.initialValues); // console.log('holding' + JSON.parse(holding))\n\n    console.log('anotherHolding' + JSON.parse(anotherHolding)); //   const dataa = {  // used to populate \"account\" reducer when \"Load\" is clicked\n    //   firstName: 'Jane',\n    //   email:'mathubar@stanbic.com',\n    // }\n    // this.props.load(dataa)\n\n    min = this.renderDateHelper();\n    console.log('ming ', min);\n    console.log('componentDid', this.props);\n  }\n\n  componentDidUpdate() {\n    console.log(this.props);\n  }\n\n  onSubmit(values) {\n    values.token = localStorage.getItem('token');\n    console.log('values ', values);\n    values.doctorsId = this.props.location.state.fromSelectedDoctor.owner._id;\n    values.doctorSpeciality = this.props.location.state.fromSelectedDoctor.speciality;\n    values.patientId = this.props.initialValues._id;\n    this.props.bookingsActionCreator(values, () => {\n      this.props.history.push('/getPatientAppointments');\n    });\n  }\n\n  renderDateHelper() {\n    var date = new Date();\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    var fullDate = year + '-' + month + '-' + day;\n\n    const stringDate = _.toString(fullDate);\n\n    console.log('fullDate ', fullDate);\n    console.log('StringDate ', stringDate);\n    return stringDate;\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }, error));\n    }\n  }\n\n  render() {\n    const {\n      handleSubmit\n    } = this.props;\n    console.log('render', this.props);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"text-center text-secondary mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }\n    }, \"Book Appointment\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"Patientfirstname\",\n      label: \"Patient Name\",\n      component: this.renderHelper,\n      type: \"text\",\n      disabled: \"disabled\",\n      required: \"required\",\n      value: this.props.initialValues.firstname,\n      placeholder: this.props.initialValues.firstname,\n      controlId: \"formGroupFirstname\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"Patientlastname\",\n      label: \"Patient Lastname\",\n      component: this.renderHelper,\n      type: \"text\",\n      disabled: \"disabled\",\n      required: \"required\",\n      value: this.props.initialValues.lastname,\n      placeholder: this.props.initialValues.lastname,\n      controlId: \"formGroupFirstname\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"Patientemail\",\n      label: \"Patient Email\",\n      component: this.renderHelper,\n      disabled: \"disabled\",\n      type: \"text\",\n      required: \"required\",\n      value: this.props.initialValues.email,\n      placeholder: this.props.initialValues.email,\n      controlId: \"formGroupPatientEmail\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"department\",\n      label: \"Doctor Category\",\n      component: this.renderHelper,\n      disabled: \"disabled\",\n      type: \"text\",\n      value: this.props.location.state.fromSelectedDoctor.speciality,\n      required: \"required\",\n      placeholder: this.props.location.state.fromSelectedDoctor.speciality,\n      controlId: \"formGroupDoctorCategory\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"doctorname\",\n      label: \"Doctor's Name\",\n      component: this.renderHelper,\n      disabled: \"disabled\",\n      type: \"text\",\n      required: \"required\",\n      value: this.props.location.state.fromSelectedDoctor.owner.lastname,\n      placeholder: this.props.location.state.fromSelectedDoctor.owner.firstname + ' ' + this.props.location.state.fromSelectedDoctor.owner.lastname,\n      controlId: \"formGroupDoctorName\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, \"Location\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      placeholder: \"Select Hospital\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 19\n      }\n    }, \"Select Hospital\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 19\n      }\n    }, \"Kalafhi Private Hospital\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 19\n      }\n    }, \"Gaborone Private Hospital\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }\n    }, \"Bokamoso Private Hospital\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }\n    }, \"Sidilega Private Hospital\"), /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }\n    }, \"AO Private Clinic\"))))), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"AppointmentDate\",\n      label: \"Appointment Date\",\n      type: \"date\",\n      min: min,\n      component: this.renderHelper,\n      required: \"required\",\n      controlId: \"formGroupAppointmentDate\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"AppointmentTime\",\n      label: \"Appointment Time\",\n      type: \"time\" // min={min}\n      ,\n      component: this.renderHelper,\n      required: \"required\",\n      placeholder: \"Appointment Time\",\n      controlId: \"formGroupAppointmentTime\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"gender\",\n      label: \"Patient Gender\",\n      component: this.renderHelperGender,\n      type: \"select\",\n      as: \"select\",\n      disabled: \"disabled\",\n      required: \"required\",\n      placeholder: \"Have Refferal\",\n      optionOne: \"Male\",\n      optionTwo: \"Female\",\n      controlId: \"formGroupGender\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"refferals\",\n      label: \"Have Refferal?\",\n      component: this.renderHelperGender,\n      type: \"select\",\n      as: \"select\",\n      required: \"required\",\n      placeholder: \"Have Refferal\",\n      optionOne: \"Yes\",\n      optionTwo: \"No\",\n      controlId: \"formGroupGender\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 18\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"medicalAid\",\n      label: \"Have Medical Aid?\",\n      component: this.renderHelperGender,\n      type: \"select\",\n      as: \"select\" // hidden={true}\n      ,\n      required: \"required\",\n      placeholder: \"Have Medical Aid?\",\n      optionOne: \"Yes\",\n      optionTwo: \"No\",\n      controlId: \"formGroupGender\",\n      className: \"col-md-4\" // hidden='hidden'\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"attachRefferall\",\n      label: \"Have Refferal?\",\n      component: this.renderHelperGender,\n      type: \"select\",\n      as: \"select\",\n      required: \"required\",\n      placeholder: \"Have Refferal\",\n      optionOne: \"Yes\",\n      optionTwo: \"No\",\n      controlId: \"formGroupGender\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"refferals\",\n      label: \"Have Refferal?\",\n      component: this.renderHelperGender,\n      type: \"select\",\n      as: \"select\",\n      required: \"required\",\n      placeholder: \"Have Refferal\",\n      optionOne: \"Yes\",\n      optionTwo: \"No\",\n      controlId: \"formGroupGender\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"container col-md-4 mt-5\",\n      type: \"submit\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 13\n      }\n    }, ' ', \"Book Now\", ' '))));\n  }\n\n} // function mapStateToProps(state, props) {\n//   return {\n//     initialValues: state.getAllDoctorsProfiles.doctorsProfiles,\n//     // dataFill:state.getAllDoctorsProfiles.doctorsProfiles\n//   };\n// }\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\n\n\nBookAppointment = reduxForm({\n  form: 'initializeFromState',\n  enableReinitialize: true\n})(BookAppointment);\nconst selector = formValueSelector('initializeFromState'); // <-- same as form name\n// now set initialValues using data from your store state\n\nBookAppointment = connect(state => ({\n  initialValues: _.merge(state.authReducer.authenticated, _.pick(state.getAllDoctorsProfiles.doctorsProfiles, 'department', 'owner')),\n  refferals: selector(state, 'refferals'),\n  medicalAid: selector(state, 'medicalAid')\n}), {\n  load,\n  bookingsActionCreator\n})(BookAppointment);\nexport default BookAppointment; // export default reduxForm({\n//   form: 'initializeFromState',\n//   enableReinitialize: true\n// })(connect(mapStateToProps,{ load }\n// )(BookAppointment));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/bookAppointment.js"],"names":["React","Component","Form","Button","Alert","connect","Field","reduxForm","formValueSelector","load","bookingsActionCreator","_","data","firstName","email","min","BookAppointment","renderHelperGender","input","type","label","controlId","className","placeholder","required","accept","meta","as","error","maxDate","optionOne","optionTwo","disabled","hidden","console","log","renderError","renderHelper","value","componentDidMount","anotherHolding","JSON","stringify","props","initialValues","parse","renderDateHelper","componentDidUpdate","onSubmit","values","token","localStorage","getItem","doctorsId","location","state","fromSelectedDoctor","owner","_id","doctorSpeciality","speciality","patientId","history","push","date","Date","day","getDate","month","getMonth","year","getFullYear","fullDate","stringDate","toString","touched","render","handleSubmit","bind","firstname","lastname","form","enableReinitialize","selector","merge","authReducer","authenticated","pick","getAllDoctorsProfiles","doctorsProfiles","refferals","medicalAid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, Button,Alert } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm,formValueSelector } from 'redux-form';\r\nimport { load } from '../actions/getAllDoctors';\r\nimport {bookingsActionCreator} from '../actions/bookingsActionCreator'\r\nimport _ from 'lodash';\r\n\r\nconst data = {\r\n  // used to populate \"account\" reducer when \"Load\" is clicked\r\n  firstName: 'Jane',\r\n  email: 'mathubar@stanbic.com',\r\n};\r\nvar min =''\r\n\r\nclass BookAppointment extends Component {\r\n\r\n  componentDidMount() {\r\n    var anotherHolding = JSON.stringify(this.props.initialValues);\r\n    // console.log('holding' + holding)\r\n    console.log('anotherHolding' + anotherHolding);\r\n\r\n    // console.log('holding' + this.props.dataFill)\r\n    console.log('anotherHolding' + this.props.initialValues);\r\n\r\n    // console.log('holding' + JSON.parse(holding))\r\n    console.log('anotherHolding' + JSON.parse(anotherHolding));\r\n\r\n    //   const dataa = {  // used to populate \"account\" reducer when \"Load\" is clicked\r\n    //   firstName: 'Jane',\r\n    //   email:'mathubar@stanbic.com',\r\n\r\n    // }\r\n\r\n    // this.props.load(dataa)\r\n   min= this.renderDateHelper()\r\n   console.log('ming ',min)\r\n   console.log('componentDid',this.props)\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log(this.props)\r\n  }\r\n\r\n\r\n  onSubmit(values){\r\n    values.token = localStorage.getItem('token');\r\n    console.log('values ', values)\r\n    values.doctorsId=this.props.location.state.fromSelectedDoctor.owner._id\r\n    values.doctorSpeciality =this.props.location.state.fromSelectedDoctor.speciality\r\n    values.patientId=this.props.initialValues._id\r\n  this.props.bookingsActionCreator(values,()=>{\r\n\r\n      this.props.history.push('/getPatientAppointments');\r\n  })\r\n\r\n} \r\n\r\nrenderDateHelper(){\r\n   \r\n    var date = new Date()\r\n    var day = date.getDate()\r\n    var month = date.getMonth() +1\r\n    var year = date.getFullYear()\r\n\r\n    var fullDate = year + '-' + month + '-' + day\r\n     const stringDate = _.toString(fullDate)\r\n    console.log('fullDate ',fullDate)\r\n    console.log('StringDate ',stringDate)\r\n\r\n    \r\n    return stringDate\r\n\r\n}\r\n  \r\nrenderError({ error, touched }) {\r\n  if (error && touched) {\r\n    return (\r\n      <div className=''>\r\n        <Alert variant='danger'>{error}</Alert>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrenderHelperGender = ({\r\n  input,\r\n  type,\r\n  label,\r\n  controlId,\r\n  className,\r\n  placeholder,\r\n  required,\r\n  accept,\r\n  meta,\r\n  as,\r\n  error,\r\n  maxDate,\r\n  optionOne,\r\n  optionTwo,\r\n  disabled,\r\n  hidden\r\n}) => {\r\n  console.log('meta ', meta);\r\n\r\n  return (\r\n    <div \r\n    hidden={hidden}\r\n    className={className}\r\n    >\r\n      <Form.Group controlId={controlId}>\r\n        <Form.Label>{label}</Form.Label>\r\n        <Form.Control\r\n          required\r\n          {...input}\r\n          disabled={disabled}\r\n          type={type}\r\n          placeholder={placeholder}\r\n          as={as}\r\n          //  max={maxDate}\r\n        >\r\n          <option>{optionOne} </option>\r\n\r\n<option>{optionTwo}</option>\r\n        </Form.Control>\r\n\r\n        {this.renderError(meta)}\r\n      </Form.Group>\r\n    </div>\r\n  );\r\n};\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    disabled,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    min,\r\n    value\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            disabled={disabled}\r\n            min={min}\r\n            value={value}\r\n          />\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n   console.log('render',this.props)\r\n\r\n    return (\r\n      <div className='container mt-5 mb-5'>\r\n        <h3 className='text-center text-secondary mb-5'>Book Appointment</h3>\r\n\r\n        <Form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n          <Form.Row>\r\n            <Field\r\n              name='Patientfirstname'\r\n              label='Patient Name'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              disabled='disabled'\r\n              required='required'\r\n              value={this.props.initialValues.firstname}\r\n              placeholder={this.props.initialValues.firstname}\r\n              controlId='formGroupFirstname'\r\n              className='col-md-4'\r\n            />\r\n            <Field\r\n              name='Patientlastname'\r\n              label='Patient Lastname'\r\n              component={this.renderHelper}\r\n              type='text'\r\n              disabled='disabled'\r\n              required='required'\r\n              value={this.props.initialValues.lastname}\r\n              placeholder={this.props.initialValues.lastname}\r\n              controlId='formGroupFirstname'\r\n              className='col-md-4'\r\n            />\r\n            {/* <div className='col-md-6'>\r\n      \r\n               <Form.Group>\r\n                 <Form.Label>Patient Name</Form.Label>\r\n                   <Form.Control \r\n                   type='text'\r\n                   placeholder='Patient Name'\r\n                   />\r\n                 \r\n               </Form.Group>\r\n               </div> */}\r\n            <Field\r\n              name='Patientemail'\r\n              label='Patient Email'\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              required='required'\r\n              value={this.props.initialValues.email}\r\n              placeholder={this.props.initialValues.email}\r\n              controlId='formGroupPatientEmail'\r\n              className='col-md-4'\r\n            />\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n            {/* <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Category</Form.Label>\r\n                <Form.Control as='select' placeholder='Category'>\r\n                  <option>General Physician </option>\r\n\r\n                  <option>Cardiologist</option>\r\n                  <option>Neurosurgeon</option>\r\n                  <option>Oncologist</option>\r\n                  <option>Orthopaedic Surgeon</option>\r\n                  <option>Neurologist</option>\r\n                  <option>Gastroenterologist</option>\r\n                  <option>ENT</option>\r\n                  <option>Dentist</option>\r\n                  <option>Psychiatrist</option>\r\n                  <option>Urologist</option>\r\n                  <option>Gynecologits</option>\r\n                  <option>Pediatrician</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n\r\n            <Field\r\n              name='department'\r\n              label='Doctor Category'\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              value={this.props.location.state.fromSelectedDoctor.speciality}\r\n              required='required'\r\n              placeholder={this.props.location.state.fromSelectedDoctor.speciality}\r\n              controlId='formGroupDoctorCategory'\r\n              className='col-md-4'\r\n            />\r\n\r\n            <Field\r\n              name='doctorname'\r\n              label=\"Doctor's Name\"\r\n              component={this.renderHelper}\r\n              disabled='disabled'\r\n              type='text'\r\n              required='required'\r\n              value={this.props.location.state.fromSelectedDoctor.owner.lastname}\r\n              placeholder={this.props.location.state.fromSelectedDoctor.owner.firstname + ' '+ this.props.location.state.fromSelectedDoctor.owner.lastname}\r\n              controlId='formGroupDoctorName'\r\n              className='col-md-4'\r\n            />\r\n            {/* <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Doctor</Form.Label>\r\n                <Form.Control as='select' placeholder='Select Doctor'>\r\n                  <option>Select Doctor</option>\r\n\r\n                  <option>Dr Mathuba</option>\r\n                  <option>Dr Mmopiemang</option>\r\n                  <option>Dr Gure</option>\r\n                  <option>Dr Mosepele</option>\r\n                  <option>Dr Kang</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div> */}\r\n\r\n            <div className='col-md-4'>\r\n              <Form.Group>\r\n                <Form.Label>Location</Form.Label>\r\n                <Form.Control as='select' placeholder='Select Hospital'>\r\n                  <option>Select Hospital</option>\r\n\r\n                  <option>Kalafhi Private Hospital</option>\r\n                  <option>Gaborone Private Hospital</option>\r\n                  <option>Bokamoso Private Hospital</option>\r\n                  <option>Sidilega Private Hospital</option>\r\n                  <option>AO Private Clinic</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </div>\r\n          </Form.Row>\r\n          <Form.Row>\r\n            {/* <div className='col-md-6'>\r\n              <Form.Group>\r\n                <Form.Label>Appointment Date</Form.Label> */}\r\n                <Field\r\n                name='AppointmentDate'\r\n              label='Appointment Date'\r\n              type='date'\r\n              min={min}\r\n              component={this.renderHelper}\r\n              required='required'\r\n            \r\n              controlId='formGroupAppointmentDate'\r\n              className='col-md-6'\r\n                 />\r\n              {/* </Form.Group>\r\n            </div> */}\r\n\r\n            {/* <div className='col-md-6'> */}\r\n              {/* <Form.Group>\r\n                <Form.Label>Available Appointment Time</Form.Label> */}\r\n                <Field\r\n                name='AppointmentTime'\r\n              label='Appointment Time'\r\n              type='time'\r\n              // min={min}\r\n              component={this.renderHelper}\r\n              required='required'\r\n              placeholder='Appointment Time'\r\n              controlId='formGroupAppointmentTime'\r\n              className='col-md-6'\r\n                />\r\n              {/* </Form.Group> */}\r\n            {/* </div> */}\r\n\r\n            {/* <div className='col-md-6'>\r\n      \r\n               <Form.Group>\r\n                 <Form.Label>Patient Email</Form.Label>\r\n                   <Form.Control \r\n                   type='text'\r\n                   placeholder='Patient Email'\r\n                   />\r\n                 \r\n               </Form.Group>\r\n               </div> */}\r\n          </Form.Row>\r\n          <Form.Row>\r\n          <Field\r\n              name='gender'\r\n              label='Patient Gender'\r\n              component={this.renderHelperGender}\r\n              type='select'\r\n              as='select'\r\n              disabled='disabled'\r\n              required='required'\r\n              placeholder='Have Refferal'\r\n              optionOne='Male'\r\n              optionTwo='Female'\r\n              controlId='formGroupGender'\r\n              className='col-md-4'\r\n              \r\n              /> \r\n                 <Field\r\n              name='refferals'\r\n              label='Have Refferal?'\r\n              component={this.renderHelperGender}\r\n              type='select'\r\n              as='select'\r\n              required='required'\r\n              placeholder='Have Refferal'\r\n              optionOne='Yes'\r\n              optionTwo='No'\r\n              controlId='formGroupGender'\r\n              className='col-md-4'\r\n              \r\n              />\r\n\r\n              <Field\r\n              name='medicalAid'\r\n              label='Have Medical Aid?'\r\n              component={this.renderHelperGender}\r\n              type='select'\r\n              as='select'\r\n              // hidden={true}\r\n              required='required'\r\n              placeholder='Have Medical Aid?'\r\n              optionOne='Yes'\r\n              optionTwo='No'\r\n              controlId='formGroupGender'\r\n              className='col-md-4'\r\n              // hidden='hidden'\r\n              \r\n              />\r\n          </Form.Row>\r\n\r\n          <Form.Row>\r\n          <Field\r\n              name='attachRefferall'\r\n              label='Have Refferal?'\r\n              component={this.renderHelperGender}\r\n              type='select'\r\n              as='select'\r\n              required='required'\r\n              placeholder='Have Refferal'\r\n              optionOne='Yes'\r\n              optionTwo='No'\r\n              controlId='formGroupGender'\r\n              className='col-md-6'\r\n              \r\n              />\r\n                  <Field\r\n              name='refferals'\r\n              label='Have Refferal?'\r\n              component={this.renderHelperGender}\r\n              type='select'\r\n              as='select'\r\n              required='required'\r\n              placeholder='Have Refferal'\r\n              optionOne='Yes'\r\n              optionTwo='No'\r\n              controlId='formGroupGender'\r\n              className='col-md-6'\r\n              \r\n              />\r\n          </Form.Row>\r\n          \r\n\r\n\r\n          <Form.Row>\r\n            <Button\r\n              className='container col-md-4 mt-5'\r\n              type='submit'\r\n              variant='success'\r\n            >\r\n              {' '}\r\n              Book Now{' '}\r\n            </Button>\r\n          </Form.Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// function mapStateToProps(state, props) {\r\n//   return {\r\n//     initialValues: state.getAllDoctorsProfiles.doctorsProfiles,\r\n//     // dataFill:state.getAllDoctorsProfiles.doctorsProfiles\r\n//   };\r\n// }\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nBookAppointment = reduxForm({\r\n  form: 'initializeFromState',\r\n  enableReinitialize: true,\r\n})(BookAppointment);\r\n\r\n\r\nconst selector = formValueSelector('initializeFromState') // <-- same as form name\r\n\r\n// now set initialValues using data from your store state\r\nBookAppointment = connect(\r\n  (state) => ({\r\n    initialValues: _.merge(state.authReducer.authenticated, _.pick(state.getAllDoctorsProfiles.doctorsProfiles,'department','owner')),\r\n     refferals :selector(state, 'refferals'),\r\n     medicalAid : selector(state, 'medicalAid')\r\n\r\n  }),\r\n  { load,bookingsActionCreator }\r\n)(BookAppointment);\r\n\r\nexport default BookAppointment;\r\n\r\n// export default reduxForm({\r\n//   form: 'initializeFromState',\r\n//   enableReinitialize: true\r\n// })(connect(mapStateToProps,{ load }\r\n// )(BookAppointment));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}