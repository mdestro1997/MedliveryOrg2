{"ast":null,"code":"var _jsxFileName = \"/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/PatientComponentViews/SignUpForm/signUpForm.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Button, Col, Container, Alert } from 'react-bootstrap/';\nimport FieldFileInput from '../../uploader';\nimport bsCustomFileInput from 'bs-custom-file-input';\nimport validator from 'validator';\nimport { signUpActionCreator } from '../../../actions/loginsignUpActionCreator';\nimport _ from 'lodash'; // import '../styles/form-styles';\n\nvar max = '';\n\nclass SignUpForm extends Component {\n  // placeholder=\"Copy Of ID\"\n  constructor(props) {\n    super(props);\n    this.parent_container = {\n      display: 'flex',\n      flexFlow: 'column',\n      alignItems: 'center',\n      justifyContent: 'center'\n    };\n\n    this.renderHelper = ({\n      input,\n      type,\n      label,\n      controlId,\n      className,\n      placeholder,\n      required,\n      accept,\n      meta,\n      error,\n      max,\n      min\n    }) => {\n      console.log('meta ', meta);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: className,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Form.Group, {\n        controlId: controlId,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Form.Label, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, label), /*#__PURE__*/React.createElement(Form.Control, Object.assign({\n        required: true\n      }, input, {\n        type: type,\n        placeholder: placeholder,\n        max: max,\n        min: min,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      })), this.renderError(meta)));\n    };\n\n    this.onChanger = this.onChanger.bind(this);\n  }\n\n  componentDidMount() {\n    bsCustomFileInput.init();\n    max = this.renderDateHelper();\n  }\n\n  onChanger(e) {\n    const {\n      input: {\n        onChange\n      }\n    } = this.props;\n    onChange(e.target.files[0]);\n    console.log(e.target.files[0]);\n  }\n\n  renderDateHelper() {\n    var date = new Date();\n    var day = date.getDate();\n    var month = date.getMonth() + 1;\n    var year = date.getFullYear();\n    var fullDate = year + '-' + month + '-' + day;\n\n    const stringDate = _.toString(fullDate);\n\n    console.log('fullDate ', fullDate);\n    console.log('StringDate ', stringDate);\n    return stringDate;\n  }\n\n  renderError({\n    error,\n    touched\n  }) {\n    if (error && touched) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, error));\n    }\n  }\n\n  // renderHelp({input,type,label,controlId,accept,required,placeholder}){\n  //     return (\n  //       <div className=\"container\">\n  //         <div className=\"custom-file\">\n  //           <input {...input} id=\"inputGroupFile01\" onChange={this.onChanger()} accept={accept}placeholder ={placeholder} required={required} type={type} className=\"custom-file-input\" />\n  //     <label className=\"custom-file-label\" for=\"inputGroupFile01\">{label}</label>\n  //         </div>\n  //       </div>\n  //     );\n  // }\n  onSubmit(formValues) {\n    console.log(formValues);\n    this.props.signUpActionCreator(formValues, () => {\n      this.props.history.push('/selectGroup');\n    });\n  }\n\n  render() {\n    // const maxDate = new Date();\n    const {\n      handleSubmit\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"  \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home-inner-signUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container   mt-5 col-md-9 bg-secondary text-dark \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"container text-center display-4 col-md-8 text-dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Form, {\n      encType: \"multipart/form-data\",\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"firstname\",\n      label: \"Firstname\",\n      component: this.renderHelper,\n      type: \"text\",\n      required: \"required\",\n      placeholder: \"Enter Firstname\",\n      controlId: \"formGroupFirstname\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"middlename\",\n      type: \"text\",\n      required: \"required\",\n      label: \"Middlename\",\n      component: this.renderHelper,\n      placeholder: \"Enter Middlename\",\n      controlId: \"formGroupMiddlename\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"lastname\",\n      type: \"text\",\n      required: \"required\",\n      label: \"Lastname\",\n      component: this.renderHelper,\n      placeholder: \"Enter Lastname\",\n      controlId: \"formGroupLastname\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      component: this.renderHelper,\n      type: \"email\",\n      required: \"required\",\n      label: \"Email\",\n      placeholder: \"Enter Email\",\n      controlId: \"formGroupEmail\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"dateOfBirth\",\n      type: \"date\",\n      required: \"required\",\n      label: \"Date Of Birth\",\n      min: \"1910-01-30\",\n      max: max,\n      component: this.renderHelper,\n      placeholder: \"Enter DOB\",\n      controlId: \"formGroupDOB\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"physicalAddress\",\n      type: \"text\",\n      required: \"required\",\n      label: \"Physical Address\",\n      component: this.renderHelper,\n      placeholder: \"Enter Physical Address\",\n      controlId: \"formGroupPhysicalAddress\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"city\",\n      type: \"text\",\n      required: \"required\",\n      label: \"City\",\n      component: this.renderHelper,\n      placeholder: \"City\",\n      controlId: \"formGroupCountry\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"phoneNumber\",\n      type: \"text\",\n      required: \"required\",\n      label: \"Mobile Number\",\n      component: this.renderHelper,\n      placeholder: \"Enter Mobile Number\",\n      controlId: \"formGroupMobileNumber\",\n      className: \"col-md-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      required: \"required\",\n      label: \"Password\",\n      component: this.renderHelper,\n      placeholder: \"Enter Password\",\n      controlId: \"formGroupPassword\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Field, {\n      name: \"passwordConfirm\",\n      type: \"password\",\n      required: \"required\",\n      label: \"Confirm password\",\n      component: this.renderHelper,\n      placeholder: \"Confirm password\",\n      controlId: \"formGrouppasswordConfirm\",\n      className: \"col-md-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(Form.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"copyOfId\",\n      component: FieldFileInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"container  col-md-2 \",\n      type: \"submit\",\n      variant: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 23\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nfunction validate(values) {\n  const error = {};\n\n  if (!values.firstname) {\n    error.firstname = 'Field is Required';\n  } else if (values.firstname) {\n    if (!validator.isAlpha(values.firstname)) {\n      error.firstname = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.middlename) {\n    error.middlename = 'Field is Required';\n  } else if (values.middlename) {\n    if (!validator.isAlpha(values.middlename)) {\n      error.middlename = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.lastname) {\n    error.lastname = 'Field is Required';\n  } else if (values.lastname) {\n    if (!validator.isAlpha(values.lastname)) {\n      error.lastname = 'Name Cannot Contain numbers,symbols or special Characters';\n    }\n  }\n\n  if (!values.password) {\n    error.password = 'Field is Required';\n  } else if (values.password) {}\n\n  if (!values.passwordConfirm) {\n    error.passwordConfirm = 'Field is Required';\n  } else if (values.passwordConfirm) {\n    if (!validator.equals(values.passwordConfirm, values.password)) {\n      error.passwordConfirm = 'Passwords do not Match';\n    }\n  }\n\n  if (!values.phoneNumber) {\n    error.phoneNumber = 'Field is Required';\n  }\n\n  if (!values.dateOfBirth) {\n    error.dateOfBirth = 'Field is Required';\n  }\n\n  if (!values.copyOfId) {\n    error.copyOfId = 'Field is Required';\n  }\n\n  if (!values.physicalAddress) {\n    error.physicalAdress = 'Field is Required';\n  }\n\n  if (!values.email) {\n    error.email = 'Field is Required';\n  } else if (values.email) {\n    const validEmail = validator.isEmail(values.email);\n\n    if (!validEmail) {\n      error.email = 'Invalid Email';\n    }\n  } //console.log('Error ', errors)\n\n\n  return error;\n}\n\nexport default reduxForm({\n  form: 'signUpForm',\n  validate\n})(connect(null, {\n  signUpActionCreator\n})(SignUpForm));","map":{"version":3,"sources":["/Users/mathubabocra.org.bw/Downloads/MedliveryMasterUpdated-main/src/Components/PatientComponentViews/SignUpForm/signUpForm.js"],"names":["React","Component","Form","connect","Field","reduxForm","Button","Col","Container","Alert","FieldFileInput","bsCustomFileInput","validator","signUpActionCreator","_","max","SignUpForm","constructor","props","parent_container","display","flexFlow","alignItems","justifyContent","renderHelper","input","type","label","controlId","className","placeholder","required","accept","meta","error","min","console","log","renderError","onChanger","bind","componentDidMount","init","renderDateHelper","e","onChange","target","files","date","Date","day","getDate","month","getMonth","year","getFullYear","fullDate","stringDate","toString","touched","onSubmit","formValues","history","push","render","handleSubmit","validate","values","firstname","isAlpha","middlename","lastname","password","passwordConfirm","equals","phoneNumber","dateOfBirth","copyOfId","physicalAddress","physicalAdress","email","validEmail","isEmail","form"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\r\nimport React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Button, Col, Container, Alert } from 'react-bootstrap/';\r\nimport FieldFileInput from '../../uploader';\r\nimport bsCustomFileInput from 'bs-custom-file-input';\r\nimport validator from 'validator';\r\nimport { signUpActionCreator } from '../../../actions/loginsignUpActionCreator';\r\nimport _ from 'lodash'\r\n\r\n// import '../styles/form-styles';\r\nvar max =''\r\n\r\nclass SignUpForm extends Component {\r\n  parent_container = {\r\n    display: 'flex',\r\n    flexFlow: 'column',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  };\r\n\r\n  // placeholder=\"Copy Of ID\"\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChanger = this.onChanger.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    bsCustomFileInput.init();\r\n    max =   this.renderDateHelper()\r\n  }\r\n\r\n  onChanger(e) {\r\n    const {\r\n      input: { onChange },\r\n    } = this.props;\r\n    onChange(e.target.files[0]);\r\n    console.log(e.target.files[0]);\r\n  }\r\n\r\n\r\n  renderDateHelper(){\r\n   \r\n    var date = new Date()\r\n    var day = date.getDate()\r\n    var month = date.getMonth() +1\r\n    var year = date.getFullYear()\r\n\r\n    var fullDate = year + '-' + month + '-' + day\r\n     const stringDate = _.toString(fullDate)\r\n    console.log('fullDate ',fullDate)\r\n    console.log('StringDate ',stringDate)\r\n\r\n    \r\n    return stringDate\r\n\r\n}\r\n\r\n  renderError({ error, touched }) {\r\n    if (error && touched) {\r\n      return (\r\n        <div className=''>\r\n          <Alert variant='danger'>{error}</Alert>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderHelper = ({\r\n    input,\r\n    type,\r\n    label,\r\n    controlId,\r\n    className,\r\n    placeholder,\r\n    required,\r\n    accept,\r\n    meta,\r\n    error,\r\n    max,\r\n    min\r\n  }) => {\r\n    console.log('meta ', meta);\r\n\r\n    return (\r\n      <div className={className}>\r\n        <Form.Group controlId={controlId}>\r\n          <Form.Label>{label}</Form.Label>\r\n          <Form.Control\r\n            required\r\n            {...input}\r\n            type={type}\r\n            placeholder={placeholder}\r\n            max={max}\r\n            min={min}\r\n\r\n          />\r\n\r\n          {this.renderError(meta)}\r\n        </Form.Group>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // renderHelp({input,type,label,controlId,accept,required,placeholder}){\r\n\r\n  //     return (\r\n  //       <div className=\"container\">\r\n  //         <div className=\"custom-file\">\r\n  //           <input {...input} id=\"inputGroupFile01\" onChange={this.onChanger()} accept={accept}placeholder ={placeholder} required={required} type={type} className=\"custom-file-input\" />\r\n  //     <label className=\"custom-file-label\" for=\"inputGroupFile01\">{label}</label>\r\n  //         </div>\r\n  //       </div>\r\n  //     );\r\n\r\n  // }\r\n\r\n  onSubmit(formValues) {\r\n    console.log(formValues);\r\n\r\n    this.props.signUpActionCreator(formValues, () => {\r\n      this.props.history.push('/selectGroup');\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // const maxDate = new Date();\r\n    const { handleSubmit } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <div className='  '>\r\n          <div className=''>\r\n            <div className='home-inner-signUp'>\r\n              <br />\r\n              <br />\r\n              <br />\r\n              <br />\r\n\r\n              <div className='container   mt-5 col-md-9 bg-secondary text-dark '>\r\n                <div className=''>\r\n                  <div className='row'>\r\n                    <h3 className='container text-center display-4 col-md-8 text-dark'>\r\n                      Sign Up\r\n                    </h3>\r\n                  </div>\r\n                  <br />\r\n                  <br />\r\n                  <Form\r\n                    encType='multipart/form-data'\r\n                    onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n                  >\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='firstname'\r\n                        label='Firstname'\r\n                        component={this.renderHelper}\r\n                        type='text'\r\n                        required='required'\r\n                        placeholder='Enter Firstname'\r\n                        controlId='formGroupFirstname'\r\n                        className='col-md-4'\r\n                      />\r\n                      <Field\r\n                        name='middlename'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Middlename'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Middlename'\r\n                        controlId='formGroupMiddlename'\r\n                        className='col-md-4'\r\n                      />\r\n                      <Field\r\n                        name='lastname'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Lastname'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Lastname'\r\n                        controlId='formGroupLastname'\r\n                        className='col-md-4'\r\n                      />\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='email'\r\n                        component={this.renderHelper}\r\n                        type='email'\r\n                        required='required'\r\n                        label='Email'\r\n                        placeholder='Enter Email'\r\n                        controlId='formGroupEmail'\r\n                        className='col-md-6'\r\n                      />\r\n\r\n                      <Field\r\n                        name='dateOfBirth'\r\n                        type='date'\r\n                        required='required'\r\n                        label='Date Of Birth'\r\n                        min='1910-01-30'\r\n                        max={max}\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter DOB'\r\n                        controlId='formGroupDOB'\r\n                        className='col-md-6'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='physicalAddress'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Physical Address'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Physical Address'\r\n                        controlId='formGroupPhysicalAddress'\r\n                        className='col-md-4'\r\n                      />\r\n\r\n                      <Field\r\n                        name='city'\r\n                        type='text'\r\n                        required='required'\r\n                        label='City'\r\n                        component={this.renderHelper}\r\n                        placeholder='City'\r\n                        controlId='formGroupCountry'\r\n                        className='col-md-4'\r\n                      />\r\n\r\n                      <Field\r\n                        name='phoneNumber'\r\n                        type='text'\r\n                        required='required'\r\n                        label='Mobile Number'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Mobile Number'\r\n                        controlId='formGroupMobileNumber'\r\n                        className='col-md-4'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field\r\n                        name='password'\r\n                        type='password'\r\n                        required='required'\r\n                        label='Password'\r\n                        component={this.renderHelper}\r\n                        placeholder='Enter Password'\r\n                        controlId='formGroupPassword'\r\n                        className='col-md-6'\r\n                      />\r\n                      <Field\r\n                        name='passwordConfirm'\r\n                        type='password'\r\n                        required='required'\r\n                        label='Confirm password'\r\n                        component={this.renderHelper}\r\n                        placeholder='Confirm password'\r\n                        controlId='formGrouppasswordConfirm'\r\n                        className='col-md-6'\r\n                      />\r\n                    </Form.Row>\r\n\r\n                    <Form.Row>\r\n                      <Field name='copyOfId' component={FieldFileInput} />\r\n                    </Form.Row>\r\n                    <br />\r\n\r\n                    <div class='row'>\r\n                      <Button\r\n                        className='container  col-md-2 '\r\n                        type='submit'\r\n                        variant='success'\r\n                      >\r\n                        Sign Up\r\n                      </Button>\r\n                    </div>\r\n\r\n                    <br />\r\n                  </Form>\r\n\r\n                  {/* <div className='container col-12'> */}\r\n\r\n                  {/* </div> */}\r\n\r\n                  {/* <form className=\"center\" encType=\"multipart/form-data\" onSubmit={handleSubmit(this.onSubmit.bind(this))} >\r\n               \r\n              <br />\r\n\r\n          \r\n             \r\n             \r\n                     <div><Alert >{this.props.errorMessage}</Alert></div>\r\n\r\n            \r\n             </form> */}\r\n\r\n                  {/* <div className=\"center col l2\" >\r\n\r\n               <h3 className=\"grey-text text-darken-3\">Sign up</h3>\r\n             </div> */}\r\n                </div>\r\n              </div>\r\n              <br />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction validate(values) {\r\n  const error = {};\r\n\r\n  if (!values.firstname) {\r\n    error.firstname = 'Field is Required';\r\n  } else if (values.firstname) {\r\n    if (!validator.isAlpha(values.firstname)) {\r\n      error.firstname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.middlename) {\r\n    error.middlename = 'Field is Required';\r\n  } else if (values.middlename) {\r\n    if (!validator.isAlpha(values.middlename)) {\r\n      error.middlename =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n  if (!values.lastname) {\r\n    error.lastname = 'Field is Required';\r\n  } else if (values.lastname) {\r\n    if (!validator.isAlpha(values.lastname)) {\r\n      error.lastname =\r\n        'Name Cannot Contain numbers,symbols or special Characters';\r\n    }\r\n  }\r\n\r\n  if (!values.password) {\r\n    error.password = 'Field is Required';\r\n  } else if (values.password) {\r\n  }\r\n  if (!values.passwordConfirm) {\r\n    error.passwordConfirm = 'Field is Required';\r\n  } else if (values.passwordConfirm) {\r\n    if (!validator.equals(values.passwordConfirm, values.password)) {\r\n      error.passwordConfirm = 'Passwords do not Match';\r\n    }\r\n  }\r\n\r\n  if (!values.phoneNumber) {\r\n    error.phoneNumber = 'Field is Required';\r\n  }\r\n  if (!values.dateOfBirth) {\r\n    error.dateOfBirth = 'Field is Required';\r\n  }\r\n  if (!values.copyOfId) {\r\n    error.copyOfId = 'Field is Required';\r\n  }\r\n  if (!values.physicalAddress) {\r\n    error.physicalAdress = 'Field is Required';\r\n  }\r\n  if (!values.email) {\r\n    error.email = 'Field is Required';\r\n  } else if (values.email) {\r\n    const validEmail = validator.isEmail(values.email);\r\n\r\n    if (!validEmail) {\r\n      error.email = 'Invalid Email';\r\n    }\r\n  }\r\n\r\n  //console.log('Error ', errors)\r\n  return error;\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'signUpForm',\r\n  validate,\r\n})(connect(null, { signUpActionCreator })(SignUpForm));\r\n"]},"metadata":{},"sourceType":"module"}